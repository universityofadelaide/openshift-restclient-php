<?php
/**
 * Extensions_v1beta1ApiTest
 * PHP version 5
 *
 * @category Class
 * @package  UniversityOfAdelaide\OpenShift
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * OpenShift API (with Kubernetes)
 *
 * OpenShift provides builds, application lifecycle, image content management, and administrative policy on top of Kubernetes. The API allows consistent management of those objects.  All API operations are authenticated via an Authorization bearer token that is provided for service accounts as a generated secret (in JWT form) or via the native OAuth endpoint located at /oauth/authorize. Core infrastructure components may use client certificates that require no authentication.  All API operations return a 'resourceVersion' string that represents the version of the object in the underlying storage. The standard LIST operation performs a snapshot read of the underlying objects, returning a resourceVersion representing a consistent version of the listed objects. The WATCH operation allows all updates to a set of objects after the provided resourceVersion to be observed by a client. By listing and beginning a watch from the returned resourceVersion, clients may observe a consistent view of the state of one or more objects. Note that WATCH always returns the update after the provided resourceVersion. Watch may be extended a limited time in the past - using etcd 2 the watch window is 1000 events (which on a large cluster may only be a few tens of seconds) so clients must explicitly handle the \"watch to old error\" by re-listing.  Objects are divided into two rough categories - those that have a lifecycle and must reflect the state of the cluster, and those that have no state. Objects with lifecycle typically have three main sections:  * 'metadata' common to all objects * a 'spec' that represents the desired state * a 'status' that represents how much of the desired state is reflected on   the cluster at the current time  Objects that have no state have 'metadata' but may lack a 'spec' or 'status' section.  Objects are divided into those that are namespace scoped (only exist inside of a namespace) and those that are cluster scoped (exist outside of a namespace). A namespace scoped resource will be deleted when the namespace is deleted and cannot be created if the namespace has not yet been created or is in the process of deletion. Cluster scoped resources are typically only accessible to admins - resources like nodes, persistent volumes, and cluster policy.  All objects have a schema that is a combination of the 'kind' and 'apiVersion' fields. This schema is additive only for any given version - no backwards incompatible changes are allowed without incrementing the apiVersion. The server will return and accept a number of standard responses that share a common schema - for instance, the common error type is 'metav1.Status' (described below) and will be returned on any error from the API server.  The API is available in multiple serialization formats - the default is JSON (Accept: application/json and Content-Type: application/json) but clients may also use YAML (application/yaml) or the native Protobuf schema (application/vnd.kubernetes.protobuf). Note that the format of the WATCH API call is slightly different - for JSON it returns newline delimited objects while for Protobuf it returns length-delimited frames (4 bytes in network-order) that contain a 'versioned.Watch' Protobuf object.  See the OpenShift documentation at https://docs.openshift.org for more information.
 *
 * OpenAPI spec version: latest
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace UniversityOfAdelaide\OpenShift;

use \UniversityOfAdelaide\OpenShift\Configuration;
use \UniversityOfAdelaide\OpenShift\ApiClient;
use \UniversityOfAdelaide\OpenShift\ApiException;
use \UniversityOfAdelaide\OpenShift\ObjectSerializer;

/**
 * Extensions_v1beta1ApiTest Class Doc Comment
 *
 * @category Class
 * @package  UniversityOfAdelaide\OpenShift
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class Extensions_v1beta1ApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {

    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {

    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {

    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {

    }

    /**
     * Test case for createExtensionsV1beta1DaemonSetForAllNamespaces
     *
     * .
     *
     */
    public function testCreateExtensionsV1beta1DaemonSetForAllNamespaces()
    {

    }

    /**
     * Test case for createExtensionsV1beta1DeploymentForAllNamespaces
     *
     * .
     *
     */
    public function testCreateExtensionsV1beta1DeploymentForAllNamespaces()
    {

    }

    /**
     * Test case for createExtensionsV1beta1HorizontalPodAutoscalerForAllNamespaces
     *
     * .
     *
     */
    public function testCreateExtensionsV1beta1HorizontalPodAutoscalerForAllNamespaces()
    {

    }

    /**
     * Test case for createExtensionsV1beta1IngressForAllNamespaces
     *
     * .
     *
     */
    public function testCreateExtensionsV1beta1IngressForAllNamespaces()
    {

    }

    /**
     * Test case for createExtensionsV1beta1NamespacedDaemonSet
     *
     * .
     *
     */
    public function testCreateExtensionsV1beta1NamespacedDaemonSet()
    {

    }

    /**
     * Test case for createExtensionsV1beta1NamespacedDeployment
     *
     * .
     *
     */
    public function testCreateExtensionsV1beta1NamespacedDeployment()
    {

    }

    /**
     * Test case for createExtensionsV1beta1NamespacedDeploymentRollbackRollback
     *
     * .
     *
     */
    public function testCreateExtensionsV1beta1NamespacedDeploymentRollbackRollback()
    {

    }

    /**
     * Test case for createExtensionsV1beta1NamespacedHorizontalPodAutoscaler
     *
     * .
     *
     */
    public function testCreateExtensionsV1beta1NamespacedHorizontalPodAutoscaler()
    {

    }

    /**
     * Test case for createExtensionsV1beta1NamespacedIngress
     *
     * .
     *
     */
    public function testCreateExtensionsV1beta1NamespacedIngress()
    {

    }

    /**
     * Test case for createExtensionsV1beta1NamespacedNetworkPolicy
     *
     * .
     *
     */
    public function testCreateExtensionsV1beta1NamespacedNetworkPolicy()
    {

    }

    /**
     * Test case for createExtensionsV1beta1NamespacedReplicaSet
     *
     * .
     *
     */
    public function testCreateExtensionsV1beta1NamespacedReplicaSet()
    {

    }

    /**
     * Test case for createExtensionsV1beta1NetworkPolicyForAllNamespaces
     *
     * .
     *
     */
    public function testCreateExtensionsV1beta1NetworkPolicyForAllNamespaces()
    {

    }

    /**
     * Test case for createExtensionsV1beta1PodSecurityPolicy
     *
     * .
     *
     */
    public function testCreateExtensionsV1beta1PodSecurityPolicy()
    {

    }

    /**
     * Test case for createExtensionsV1beta1ReplicaSetForAllNamespaces
     *
     * .
     *
     */
    public function testCreateExtensionsV1beta1ReplicaSetForAllNamespaces()
    {

    }

    /**
     * Test case for createExtensionsV1beta1ThirdPartyResource
     *
     * .
     *
     */
    public function testCreateExtensionsV1beta1ThirdPartyResource()
    {

    }

    /**
     * Test case for deleteExtensionsV1beta1CollectionNamespacedDaemonSet
     *
     * .
     *
     */
    public function testDeleteExtensionsV1beta1CollectionNamespacedDaemonSet()
    {

    }

    /**
     * Test case for deleteExtensionsV1beta1CollectionNamespacedDeployment
     *
     * .
     *
     */
    public function testDeleteExtensionsV1beta1CollectionNamespacedDeployment()
    {

    }

    /**
     * Test case for deleteExtensionsV1beta1CollectionNamespacedHorizontalPodAutoscaler
     *
     * .
     *
     */
    public function testDeleteExtensionsV1beta1CollectionNamespacedHorizontalPodAutoscaler()
    {

    }

    /**
     * Test case for deleteExtensionsV1beta1CollectionNamespacedIngress
     *
     * .
     *
     */
    public function testDeleteExtensionsV1beta1CollectionNamespacedIngress()
    {

    }

    /**
     * Test case for deleteExtensionsV1beta1CollectionNamespacedNetworkPolicy
     *
     * .
     *
     */
    public function testDeleteExtensionsV1beta1CollectionNamespacedNetworkPolicy()
    {

    }

    /**
     * Test case for deleteExtensionsV1beta1CollectionNamespacedReplicaSet
     *
     * .
     *
     */
    public function testDeleteExtensionsV1beta1CollectionNamespacedReplicaSet()
    {

    }

    /**
     * Test case for deleteExtensionsV1beta1CollectionPodSecurityPolicy
     *
     * .
     *
     */
    public function testDeleteExtensionsV1beta1CollectionPodSecurityPolicy()
    {

    }

    /**
     * Test case for deleteExtensionsV1beta1CollectionThirdPartyResource
     *
     * .
     *
     */
    public function testDeleteExtensionsV1beta1CollectionThirdPartyResource()
    {

    }

    /**
     * Test case for deleteExtensionsV1beta1NamespacedDaemonSet
     *
     * .
     *
     */
    public function testDeleteExtensionsV1beta1NamespacedDaemonSet()
    {

    }

    /**
     * Test case for deleteExtensionsV1beta1NamespacedDeployment
     *
     * .
     *
     */
    public function testDeleteExtensionsV1beta1NamespacedDeployment()
    {

    }

    /**
     * Test case for deleteExtensionsV1beta1NamespacedHorizontalPodAutoscaler
     *
     * .
     *
     */
    public function testDeleteExtensionsV1beta1NamespacedHorizontalPodAutoscaler()
    {

    }

    /**
     * Test case for deleteExtensionsV1beta1NamespacedIngress
     *
     * .
     *
     */
    public function testDeleteExtensionsV1beta1NamespacedIngress()
    {

    }

    /**
     * Test case for deleteExtensionsV1beta1NamespacedNetworkPolicy
     *
     * .
     *
     */
    public function testDeleteExtensionsV1beta1NamespacedNetworkPolicy()
    {

    }

    /**
     * Test case for deleteExtensionsV1beta1NamespacedReplicaSet
     *
     * .
     *
     */
    public function testDeleteExtensionsV1beta1NamespacedReplicaSet()
    {

    }

    /**
     * Test case for deleteExtensionsV1beta1PodSecurityPolicy
     *
     * .
     *
     */
    public function testDeleteExtensionsV1beta1PodSecurityPolicy()
    {

    }

    /**
     * Test case for deleteExtensionsV1beta1ThirdPartyResource
     *
     * .
     *
     */
    public function testDeleteExtensionsV1beta1ThirdPartyResource()
    {

    }

    /**
     * Test case for getExtensionsV1beta1APIResources
     *
     * .
     *
     */
    public function testGetExtensionsV1beta1APIResources()
    {

    }

    /**
     * Test case for listExtensionsV1beta1DaemonSetForAllNamespaces
     *
     * .
     *
     */
    public function testListExtensionsV1beta1DaemonSetForAllNamespaces()
    {

    }

    /**
     * Test case for listExtensionsV1beta1DeploymentForAllNamespaces
     *
     * .
     *
     */
    public function testListExtensionsV1beta1DeploymentForAllNamespaces()
    {

    }

    /**
     * Test case for listExtensionsV1beta1HorizontalPodAutoscalerForAllNamespaces
     *
     * .
     *
     */
    public function testListExtensionsV1beta1HorizontalPodAutoscalerForAllNamespaces()
    {

    }

    /**
     * Test case for listExtensionsV1beta1IngressForAllNamespaces
     *
     * .
     *
     */
    public function testListExtensionsV1beta1IngressForAllNamespaces()
    {

    }

    /**
     * Test case for listExtensionsV1beta1NamespacedDaemonSet
     *
     * .
     *
     */
    public function testListExtensionsV1beta1NamespacedDaemonSet()
    {

    }

    /**
     * Test case for listExtensionsV1beta1NamespacedDeployment
     *
     * .
     *
     */
    public function testListExtensionsV1beta1NamespacedDeployment()
    {

    }

    /**
     * Test case for listExtensionsV1beta1NamespacedHorizontalPodAutoscaler
     *
     * .
     *
     */
    public function testListExtensionsV1beta1NamespacedHorizontalPodAutoscaler()
    {

    }

    /**
     * Test case for listExtensionsV1beta1NamespacedIngress
     *
     * .
     *
     */
    public function testListExtensionsV1beta1NamespacedIngress()
    {

    }

    /**
     * Test case for listExtensionsV1beta1NamespacedNetworkPolicy
     *
     * .
     *
     */
    public function testListExtensionsV1beta1NamespacedNetworkPolicy()
    {

    }

    /**
     * Test case for listExtensionsV1beta1NamespacedReplicaSet
     *
     * .
     *
     */
    public function testListExtensionsV1beta1NamespacedReplicaSet()
    {

    }

    /**
     * Test case for listExtensionsV1beta1NetworkPolicyForAllNamespaces
     *
     * .
     *
     */
    public function testListExtensionsV1beta1NetworkPolicyForAllNamespaces()
    {

    }

    /**
     * Test case for listExtensionsV1beta1PodSecurityPolicy
     *
     * .
     *
     */
    public function testListExtensionsV1beta1PodSecurityPolicy()
    {

    }

    /**
     * Test case for listExtensionsV1beta1ReplicaSetForAllNamespaces
     *
     * .
     *
     */
    public function testListExtensionsV1beta1ReplicaSetForAllNamespaces()
    {

    }

    /**
     * Test case for listExtensionsV1beta1ThirdPartyResource
     *
     * .
     *
     */
    public function testListExtensionsV1beta1ThirdPartyResource()
    {

    }

    /**
     * Test case for patchExtensionsV1beta1NamespacedDaemonSet
     *
     * .
     *
     */
    public function testPatchExtensionsV1beta1NamespacedDaemonSet()
    {

    }

    /**
     * Test case for patchExtensionsV1beta1NamespacedDaemonSetStatus
     *
     * .
     *
     */
    public function testPatchExtensionsV1beta1NamespacedDaemonSetStatus()
    {

    }

    /**
     * Test case for patchExtensionsV1beta1NamespacedDeployment
     *
     * .
     *
     */
    public function testPatchExtensionsV1beta1NamespacedDeployment()
    {

    }

    /**
     * Test case for patchExtensionsV1beta1NamespacedDeploymentStatus
     *
     * .
     *
     */
    public function testPatchExtensionsV1beta1NamespacedDeploymentStatus()
    {

    }

    /**
     * Test case for patchExtensionsV1beta1NamespacedDeploymentsScale
     *
     * .
     *
     */
    public function testPatchExtensionsV1beta1NamespacedDeploymentsScale()
    {

    }

    /**
     * Test case for patchExtensionsV1beta1NamespacedHorizontalPodAutoscaler
     *
     * .
     *
     */
    public function testPatchExtensionsV1beta1NamespacedHorizontalPodAutoscaler()
    {

    }

    /**
     * Test case for patchExtensionsV1beta1NamespacedHorizontalPodAutoscalerStatus
     *
     * .
     *
     */
    public function testPatchExtensionsV1beta1NamespacedHorizontalPodAutoscalerStatus()
    {

    }

    /**
     * Test case for patchExtensionsV1beta1NamespacedIngress
     *
     * .
     *
     */
    public function testPatchExtensionsV1beta1NamespacedIngress()
    {

    }

    /**
     * Test case for patchExtensionsV1beta1NamespacedIngressStatus
     *
     * .
     *
     */
    public function testPatchExtensionsV1beta1NamespacedIngressStatus()
    {

    }

    /**
     * Test case for patchExtensionsV1beta1NamespacedNetworkPolicy
     *
     * .
     *
     */
    public function testPatchExtensionsV1beta1NamespacedNetworkPolicy()
    {

    }

    /**
     * Test case for patchExtensionsV1beta1NamespacedReplicaSet
     *
     * .
     *
     */
    public function testPatchExtensionsV1beta1NamespacedReplicaSet()
    {

    }

    /**
     * Test case for patchExtensionsV1beta1NamespacedReplicaSetStatus
     *
     * .
     *
     */
    public function testPatchExtensionsV1beta1NamespacedReplicaSetStatus()
    {

    }

    /**
     * Test case for patchExtensionsV1beta1NamespacedReplicasetsScale
     *
     * .
     *
     */
    public function testPatchExtensionsV1beta1NamespacedReplicasetsScale()
    {

    }

    /**
     * Test case for patchExtensionsV1beta1NamespacedReplicationcontrollersScale
     *
     * .
     *
     */
    public function testPatchExtensionsV1beta1NamespacedReplicationcontrollersScale()
    {

    }

    /**
     * Test case for patchExtensionsV1beta1PodSecurityPolicy
     *
     * .
     *
     */
    public function testPatchExtensionsV1beta1PodSecurityPolicy()
    {

    }

    /**
     * Test case for patchExtensionsV1beta1ThirdPartyResource
     *
     * .
     *
     */
    public function testPatchExtensionsV1beta1ThirdPartyResource()
    {

    }

    /**
     * Test case for readExtensionsV1beta1NamespacedDaemonSet
     *
     * .
     *
     */
    public function testReadExtensionsV1beta1NamespacedDaemonSet()
    {

    }

    /**
     * Test case for readExtensionsV1beta1NamespacedDaemonSetStatus
     *
     * .
     *
     */
    public function testReadExtensionsV1beta1NamespacedDaemonSetStatus()
    {

    }

    /**
     * Test case for readExtensionsV1beta1NamespacedDeployment
     *
     * .
     *
     */
    public function testReadExtensionsV1beta1NamespacedDeployment()
    {

    }

    /**
     * Test case for readExtensionsV1beta1NamespacedDeploymentStatus
     *
     * .
     *
     */
    public function testReadExtensionsV1beta1NamespacedDeploymentStatus()
    {

    }

    /**
     * Test case for readExtensionsV1beta1NamespacedDeploymentsScale
     *
     * .
     *
     */
    public function testReadExtensionsV1beta1NamespacedDeploymentsScale()
    {

    }

    /**
     * Test case for readExtensionsV1beta1NamespacedHorizontalPodAutoscaler
     *
     * .
     *
     */
    public function testReadExtensionsV1beta1NamespacedHorizontalPodAutoscaler()
    {

    }

    /**
     * Test case for readExtensionsV1beta1NamespacedHorizontalPodAutoscalerStatus
     *
     * .
     *
     */
    public function testReadExtensionsV1beta1NamespacedHorizontalPodAutoscalerStatus()
    {

    }

    /**
     * Test case for readExtensionsV1beta1NamespacedIngress
     *
     * .
     *
     */
    public function testReadExtensionsV1beta1NamespacedIngress()
    {

    }

    /**
     * Test case for readExtensionsV1beta1NamespacedIngressStatus
     *
     * .
     *
     */
    public function testReadExtensionsV1beta1NamespacedIngressStatus()
    {

    }

    /**
     * Test case for readExtensionsV1beta1NamespacedNetworkPolicy
     *
     * .
     *
     */
    public function testReadExtensionsV1beta1NamespacedNetworkPolicy()
    {

    }

    /**
     * Test case for readExtensionsV1beta1NamespacedReplicaSet
     *
     * .
     *
     */
    public function testReadExtensionsV1beta1NamespacedReplicaSet()
    {

    }

    /**
     * Test case for readExtensionsV1beta1NamespacedReplicaSetStatus
     *
     * .
     *
     */
    public function testReadExtensionsV1beta1NamespacedReplicaSetStatus()
    {

    }

    /**
     * Test case for readExtensionsV1beta1NamespacedReplicasetsScale
     *
     * .
     *
     */
    public function testReadExtensionsV1beta1NamespacedReplicasetsScale()
    {

    }

    /**
     * Test case for readExtensionsV1beta1NamespacedReplicationcontrollersScale
     *
     * .
     *
     */
    public function testReadExtensionsV1beta1NamespacedReplicationcontrollersScale()
    {

    }

    /**
     * Test case for readExtensionsV1beta1PodSecurityPolicy
     *
     * .
     *
     */
    public function testReadExtensionsV1beta1PodSecurityPolicy()
    {

    }

    /**
     * Test case for readExtensionsV1beta1ThirdPartyResource
     *
     * .
     *
     */
    public function testReadExtensionsV1beta1ThirdPartyResource()
    {

    }

    /**
     * Test case for replaceExtensionsV1beta1NamespacedDaemonSet
     *
     * .
     *
     */
    public function testReplaceExtensionsV1beta1NamespacedDaemonSet()
    {

    }

    /**
     * Test case for replaceExtensionsV1beta1NamespacedDaemonSetStatus
     *
     * .
     *
     */
    public function testReplaceExtensionsV1beta1NamespacedDaemonSetStatus()
    {

    }

    /**
     * Test case for replaceExtensionsV1beta1NamespacedDeployment
     *
     * .
     *
     */
    public function testReplaceExtensionsV1beta1NamespacedDeployment()
    {

    }

    /**
     * Test case for replaceExtensionsV1beta1NamespacedDeploymentStatus
     *
     * .
     *
     */
    public function testReplaceExtensionsV1beta1NamespacedDeploymentStatus()
    {

    }

    /**
     * Test case for replaceExtensionsV1beta1NamespacedDeploymentsScale
     *
     * .
     *
     */
    public function testReplaceExtensionsV1beta1NamespacedDeploymentsScale()
    {

    }

    /**
     * Test case for replaceExtensionsV1beta1NamespacedHorizontalPodAutoscaler
     *
     * .
     *
     */
    public function testReplaceExtensionsV1beta1NamespacedHorizontalPodAutoscaler()
    {

    }

    /**
     * Test case for replaceExtensionsV1beta1NamespacedHorizontalPodAutoscalerStatus
     *
     * .
     *
     */
    public function testReplaceExtensionsV1beta1NamespacedHorizontalPodAutoscalerStatus()
    {

    }

    /**
     * Test case for replaceExtensionsV1beta1NamespacedIngress
     *
     * .
     *
     */
    public function testReplaceExtensionsV1beta1NamespacedIngress()
    {

    }

    /**
     * Test case for replaceExtensionsV1beta1NamespacedIngressStatus
     *
     * .
     *
     */
    public function testReplaceExtensionsV1beta1NamespacedIngressStatus()
    {

    }

    /**
     * Test case for replaceExtensionsV1beta1NamespacedNetworkPolicy
     *
     * .
     *
     */
    public function testReplaceExtensionsV1beta1NamespacedNetworkPolicy()
    {

    }

    /**
     * Test case for replaceExtensionsV1beta1NamespacedReplicaSet
     *
     * .
     *
     */
    public function testReplaceExtensionsV1beta1NamespacedReplicaSet()
    {

    }

    /**
     * Test case for replaceExtensionsV1beta1NamespacedReplicaSetStatus
     *
     * .
     *
     */
    public function testReplaceExtensionsV1beta1NamespacedReplicaSetStatus()
    {

    }

    /**
     * Test case for replaceExtensionsV1beta1NamespacedReplicasetsScale
     *
     * .
     *
     */
    public function testReplaceExtensionsV1beta1NamespacedReplicasetsScale()
    {

    }

    /**
     * Test case for replaceExtensionsV1beta1NamespacedReplicationcontrollersScale
     *
     * .
     *
     */
    public function testReplaceExtensionsV1beta1NamespacedReplicationcontrollersScale()
    {

    }

    /**
     * Test case for replaceExtensionsV1beta1PodSecurityPolicy
     *
     * .
     *
     */
    public function testReplaceExtensionsV1beta1PodSecurityPolicy()
    {

    }

    /**
     * Test case for replaceExtensionsV1beta1ThirdPartyResource
     *
     * .
     *
     */
    public function testReplaceExtensionsV1beta1ThirdPartyResource()
    {

    }

    /**
     * Test case for watchExtensionsV1beta1DaemonSetListForAllNamespaces
     *
     * .
     *
     */
    public function testWatchExtensionsV1beta1DaemonSetListForAllNamespaces()
    {

    }

    /**
     * Test case for watchExtensionsV1beta1DeploymentListForAllNamespaces
     *
     * .
     *
     */
    public function testWatchExtensionsV1beta1DeploymentListForAllNamespaces()
    {

    }

    /**
     * Test case for watchExtensionsV1beta1HorizontalPodAutoscalerListForAllNamespaces
     *
     * .
     *
     */
    public function testWatchExtensionsV1beta1HorizontalPodAutoscalerListForAllNamespaces()
    {

    }

    /**
     * Test case for watchExtensionsV1beta1IngressListForAllNamespaces
     *
     * .
     *
     */
    public function testWatchExtensionsV1beta1IngressListForAllNamespaces()
    {

    }

    /**
     * Test case for watchExtensionsV1beta1NamespacedDaemonSet
     *
     * .
     *
     */
    public function testWatchExtensionsV1beta1NamespacedDaemonSet()
    {

    }

    /**
     * Test case for watchExtensionsV1beta1NamespacedDaemonSetList
     *
     * .
     *
     */
    public function testWatchExtensionsV1beta1NamespacedDaemonSetList()
    {

    }

    /**
     * Test case for watchExtensionsV1beta1NamespacedDeployment
     *
     * .
     *
     */
    public function testWatchExtensionsV1beta1NamespacedDeployment()
    {

    }

    /**
     * Test case for watchExtensionsV1beta1NamespacedDeploymentList
     *
     * .
     *
     */
    public function testWatchExtensionsV1beta1NamespacedDeploymentList()
    {

    }

    /**
     * Test case for watchExtensionsV1beta1NamespacedHorizontalPodAutoscaler
     *
     * .
     *
     */
    public function testWatchExtensionsV1beta1NamespacedHorizontalPodAutoscaler()
    {

    }

    /**
     * Test case for watchExtensionsV1beta1NamespacedHorizontalPodAutoscalerList
     *
     * .
     *
     */
    public function testWatchExtensionsV1beta1NamespacedHorizontalPodAutoscalerList()
    {

    }

    /**
     * Test case for watchExtensionsV1beta1NamespacedIngress
     *
     * .
     *
     */
    public function testWatchExtensionsV1beta1NamespacedIngress()
    {

    }

    /**
     * Test case for watchExtensionsV1beta1NamespacedIngressList
     *
     * .
     *
     */
    public function testWatchExtensionsV1beta1NamespacedIngressList()
    {

    }

    /**
     * Test case for watchExtensionsV1beta1NamespacedNetworkPolicy
     *
     * .
     *
     */
    public function testWatchExtensionsV1beta1NamespacedNetworkPolicy()
    {

    }

    /**
     * Test case for watchExtensionsV1beta1NamespacedNetworkPolicyList
     *
     * .
     *
     */
    public function testWatchExtensionsV1beta1NamespacedNetworkPolicyList()
    {

    }

    /**
     * Test case for watchExtensionsV1beta1NamespacedReplicaSet
     *
     * .
     *
     */
    public function testWatchExtensionsV1beta1NamespacedReplicaSet()
    {

    }

    /**
     * Test case for watchExtensionsV1beta1NamespacedReplicaSetList
     *
     * .
     *
     */
    public function testWatchExtensionsV1beta1NamespacedReplicaSetList()
    {

    }

    /**
     * Test case for watchExtensionsV1beta1NetworkPolicyListForAllNamespaces
     *
     * .
     *
     */
    public function testWatchExtensionsV1beta1NetworkPolicyListForAllNamespaces()
    {

    }

    /**
     * Test case for watchExtensionsV1beta1PodSecurityPolicy
     *
     * .
     *
     */
    public function testWatchExtensionsV1beta1PodSecurityPolicy()
    {

    }

    /**
     * Test case for watchExtensionsV1beta1PodSecurityPolicyList
     *
     * .
     *
     */
    public function testWatchExtensionsV1beta1PodSecurityPolicyList()
    {

    }

    /**
     * Test case for watchExtensionsV1beta1ReplicaSetListForAllNamespaces
     *
     * .
     *
     */
    public function testWatchExtensionsV1beta1ReplicaSetListForAllNamespaces()
    {

    }

    /**
     * Test case for watchExtensionsV1beta1ThirdPartyResource
     *
     * .
     *
     */
    public function testWatchExtensionsV1beta1ThirdPartyResource()
    {

    }

    /**
     * Test case for watchExtensionsV1beta1ThirdPartyResourceList
     *
     * .
     *
     */
    public function testWatchExtensionsV1beta1ThirdPartyResourceList()
    {

    }

}
