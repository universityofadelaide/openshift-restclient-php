<?php
/**
 * Core_v1ApiTest
 * PHP version 5
 *
 * @category Class
 * @package  UniversityOfAdelaide\OpenShift
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * OpenShift API (with Kubernetes)
 *
 * OpenShift provides builds, application lifecycle, image content management, and administrative policy on top of Kubernetes. The API allows consistent management of those objects.  All API operations are authenticated via an Authorization bearer token that is provided for service accounts as a generated secret (in JWT form) or via the native OAuth endpoint located at /oauth/authorize. Core infrastructure components may use client certificates that require no authentication.  All API operations return a 'resourceVersion' string that represents the version of the object in the underlying storage. The standard LIST operation performs a snapshot read of the underlying objects, returning a resourceVersion representing a consistent version of the listed objects. The WATCH operation allows all updates to a set of objects after the provided resourceVersion to be observed by a client. By listing and beginning a watch from the returned resourceVersion, clients may observe a consistent view of the state of one or more objects. Note that WATCH always returns the update after the provided resourceVersion. Watch may be extended a limited time in the past - using etcd 2 the watch window is 1000 events (which on a large cluster may only be a few tens of seconds) so clients must explicitly handle the \"watch to old error\" by re-listing.  Objects are divided into two rough categories - those that have a lifecycle and must reflect the state of the cluster, and those that have no state. Objects with lifecycle typically have three main sections:  * 'metadata' common to all objects * a 'spec' that represents the desired state * a 'status' that represents how much of the desired state is reflected on   the cluster at the current time  Objects that have no state have 'metadata' but may lack a 'spec' or 'status' section.  Objects are divided into those that are namespace scoped (only exist inside of a namespace) and those that are cluster scoped (exist outside of a namespace). A namespace scoped resource will be deleted when the namespace is deleted and cannot be created if the namespace has not yet been created or is in the process of deletion. Cluster scoped resources are typically only accessible to admins - resources like nodes, persistent volumes, and cluster policy.  All objects have a schema that is a combination of the 'kind' and 'apiVersion' fields. This schema is additive only for any given version - no backwards incompatible changes are allowed without incrementing the apiVersion. The server will return and accept a number of standard responses that share a common schema - for instance, the common error type is 'metav1.Status' (described below) and will be returned on any error from the API server.  The API is available in multiple serialization formats - the default is JSON (Accept: application/json and Content-Type: application/json) but clients may also use YAML (application/yaml) or the native Protobuf schema (application/vnd.kubernetes.protobuf). Note that the format of the WATCH API call is slightly different - for JSON it returns newline delimited objects while for Protobuf it returns length-delimited frames (4 bytes in network-order) that contain a 'versioned.Watch' Protobuf object.  See the OpenShift documentation at https://docs.openshift.org for more information.
 *
 * OpenAPI spec version: latest
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace UniversityOfAdelaide\OpenShift;

use \UniversityOfAdelaide\OpenShift\Configuration;
use \UniversityOfAdelaide\OpenShift\ApiClient;
use \UniversityOfAdelaide\OpenShift\ApiException;
use \UniversityOfAdelaide\OpenShift\ObjectSerializer;

/**
 * Core_v1ApiTest Class Doc Comment
 *
 * @category Class
 * @package  UniversityOfAdelaide\OpenShift
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class Core_v1ApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {

    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {

    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {

    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {

    }

    /**
     * Test case for connectCoreV1DeleteNamespacedPodProxy
     *
     * .
     *
     */
    public function testConnectCoreV1DeleteNamespacedPodProxy()
    {

    }

    /**
     * Test case for connectCoreV1DeleteNamespacedPodProxyWithPath
     *
     * .
     *
     */
    public function testConnectCoreV1DeleteNamespacedPodProxyWithPath()
    {

    }

    /**
     * Test case for connectCoreV1DeleteNamespacedServiceProxy
     *
     * .
     *
     */
    public function testConnectCoreV1DeleteNamespacedServiceProxy()
    {

    }

    /**
     * Test case for connectCoreV1DeleteNamespacedServiceProxyWithPath
     *
     * .
     *
     */
    public function testConnectCoreV1DeleteNamespacedServiceProxyWithPath()
    {

    }

    /**
     * Test case for connectCoreV1DeleteNodeProxy
     *
     * .
     *
     */
    public function testConnectCoreV1DeleteNodeProxy()
    {

    }

    /**
     * Test case for connectCoreV1DeleteNodeProxyWithPath
     *
     * .
     *
     */
    public function testConnectCoreV1DeleteNodeProxyWithPath()
    {

    }

    /**
     * Test case for connectCoreV1GetNamespacedPodAttach
     *
     * .
     *
     */
    public function testConnectCoreV1GetNamespacedPodAttach()
    {

    }

    /**
     * Test case for connectCoreV1GetNamespacedPodExec
     *
     * .
     *
     */
    public function testConnectCoreV1GetNamespacedPodExec()
    {

    }

    /**
     * Test case for connectCoreV1GetNamespacedPodPortforward
     *
     * .
     *
     */
    public function testConnectCoreV1GetNamespacedPodPortforward()
    {

    }

    /**
     * Test case for connectCoreV1GetNamespacedPodProxy
     *
     * .
     *
     */
    public function testConnectCoreV1GetNamespacedPodProxy()
    {

    }

    /**
     * Test case for connectCoreV1GetNamespacedPodProxyWithPath
     *
     * .
     *
     */
    public function testConnectCoreV1GetNamespacedPodProxyWithPath()
    {

    }

    /**
     * Test case for connectCoreV1GetNamespacedServiceProxy
     *
     * .
     *
     */
    public function testConnectCoreV1GetNamespacedServiceProxy()
    {

    }

    /**
     * Test case for connectCoreV1GetNamespacedServiceProxyWithPath
     *
     * .
     *
     */
    public function testConnectCoreV1GetNamespacedServiceProxyWithPath()
    {

    }

    /**
     * Test case for connectCoreV1GetNodeProxy
     *
     * .
     *
     */
    public function testConnectCoreV1GetNodeProxy()
    {

    }

    /**
     * Test case for connectCoreV1GetNodeProxyWithPath
     *
     * .
     *
     */
    public function testConnectCoreV1GetNodeProxyWithPath()
    {

    }

    /**
     * Test case for connectCoreV1HeadNamespacedPodProxy
     *
     * .
     *
     */
    public function testConnectCoreV1HeadNamespacedPodProxy()
    {

    }

    /**
     * Test case for connectCoreV1HeadNamespacedPodProxyWithPath
     *
     * .
     *
     */
    public function testConnectCoreV1HeadNamespacedPodProxyWithPath()
    {

    }

    /**
     * Test case for connectCoreV1HeadNamespacedServiceProxy
     *
     * .
     *
     */
    public function testConnectCoreV1HeadNamespacedServiceProxy()
    {

    }

    /**
     * Test case for connectCoreV1HeadNamespacedServiceProxyWithPath
     *
     * .
     *
     */
    public function testConnectCoreV1HeadNamespacedServiceProxyWithPath()
    {

    }

    /**
     * Test case for connectCoreV1HeadNodeProxy
     *
     * .
     *
     */
    public function testConnectCoreV1HeadNodeProxy()
    {

    }

    /**
     * Test case for connectCoreV1HeadNodeProxyWithPath
     *
     * .
     *
     */
    public function testConnectCoreV1HeadNodeProxyWithPath()
    {

    }

    /**
     * Test case for connectCoreV1OptionsNamespacedPodProxy
     *
     * .
     *
     */
    public function testConnectCoreV1OptionsNamespacedPodProxy()
    {

    }

    /**
     * Test case for connectCoreV1OptionsNamespacedPodProxyWithPath
     *
     * .
     *
     */
    public function testConnectCoreV1OptionsNamespacedPodProxyWithPath()
    {

    }

    /**
     * Test case for connectCoreV1OptionsNamespacedServiceProxy
     *
     * .
     *
     */
    public function testConnectCoreV1OptionsNamespacedServiceProxy()
    {

    }

    /**
     * Test case for connectCoreV1OptionsNamespacedServiceProxyWithPath
     *
     * .
     *
     */
    public function testConnectCoreV1OptionsNamespacedServiceProxyWithPath()
    {

    }

    /**
     * Test case for connectCoreV1OptionsNodeProxy
     *
     * .
     *
     */
    public function testConnectCoreV1OptionsNodeProxy()
    {

    }

    /**
     * Test case for connectCoreV1OptionsNodeProxyWithPath
     *
     * .
     *
     */
    public function testConnectCoreV1OptionsNodeProxyWithPath()
    {

    }

    /**
     * Test case for connectCoreV1PostNamespacedPodAttach
     *
     * .
     *
     */
    public function testConnectCoreV1PostNamespacedPodAttach()
    {

    }

    /**
     * Test case for connectCoreV1PostNamespacedPodExec
     *
     * .
     *
     */
    public function testConnectCoreV1PostNamespacedPodExec()
    {

    }

    /**
     * Test case for connectCoreV1PostNamespacedPodPortforward
     *
     * .
     *
     */
    public function testConnectCoreV1PostNamespacedPodPortforward()
    {

    }

    /**
     * Test case for connectCoreV1PostNamespacedPodProxy
     *
     * .
     *
     */
    public function testConnectCoreV1PostNamespacedPodProxy()
    {

    }

    /**
     * Test case for connectCoreV1PostNamespacedPodProxyWithPath
     *
     * .
     *
     */
    public function testConnectCoreV1PostNamespacedPodProxyWithPath()
    {

    }

    /**
     * Test case for connectCoreV1PostNamespacedServiceProxy
     *
     * .
     *
     */
    public function testConnectCoreV1PostNamespacedServiceProxy()
    {

    }

    /**
     * Test case for connectCoreV1PostNamespacedServiceProxyWithPath
     *
     * .
     *
     */
    public function testConnectCoreV1PostNamespacedServiceProxyWithPath()
    {

    }

    /**
     * Test case for connectCoreV1PostNodeProxy
     *
     * .
     *
     */
    public function testConnectCoreV1PostNodeProxy()
    {

    }

    /**
     * Test case for connectCoreV1PostNodeProxyWithPath
     *
     * .
     *
     */
    public function testConnectCoreV1PostNodeProxyWithPath()
    {

    }

    /**
     * Test case for connectCoreV1PutNamespacedPodProxy
     *
     * .
     *
     */
    public function testConnectCoreV1PutNamespacedPodProxy()
    {

    }

    /**
     * Test case for connectCoreV1PutNamespacedPodProxyWithPath
     *
     * .
     *
     */
    public function testConnectCoreV1PutNamespacedPodProxyWithPath()
    {

    }

    /**
     * Test case for connectCoreV1PutNamespacedServiceProxy
     *
     * .
     *
     */
    public function testConnectCoreV1PutNamespacedServiceProxy()
    {

    }

    /**
     * Test case for connectCoreV1PutNamespacedServiceProxyWithPath
     *
     * .
     *
     */
    public function testConnectCoreV1PutNamespacedServiceProxyWithPath()
    {

    }

    /**
     * Test case for connectCoreV1PutNodeProxy
     *
     * .
     *
     */
    public function testConnectCoreV1PutNodeProxy()
    {

    }

    /**
     * Test case for connectCoreV1PutNodeProxyWithPath
     *
     * .
     *
     */
    public function testConnectCoreV1PutNodeProxyWithPath()
    {

    }

    /**
     * Test case for createCoreV1BindingForAllNamespaces
     *
     * .
     *
     */
    public function testCreateCoreV1BindingForAllNamespaces()
    {

    }

    /**
     * Test case for createCoreV1ConfigMapForAllNamespaces
     *
     * .
     *
     */
    public function testCreateCoreV1ConfigMapForAllNamespaces()
    {

    }

    /**
     * Test case for createCoreV1EndpointsForAllNamespaces
     *
     * .
     *
     */
    public function testCreateCoreV1EndpointsForAllNamespaces()
    {

    }

    /**
     * Test case for createCoreV1EventForAllNamespaces
     *
     * .
     *
     */
    public function testCreateCoreV1EventForAllNamespaces()
    {

    }

    /**
     * Test case for createCoreV1LimitRangeForAllNamespaces
     *
     * .
     *
     */
    public function testCreateCoreV1LimitRangeForAllNamespaces()
    {

    }

    /**
     * Test case for createCoreV1Namespace
     *
     * .
     *
     */
    public function testCreateCoreV1Namespace()
    {

    }

    /**
     * Test case for createCoreV1NamespacedBinding
     *
     * .
     *
     */
    public function testCreateCoreV1NamespacedBinding()
    {

    }

    /**
     * Test case for createCoreV1NamespacedBindingBinding
     *
     * .
     *
     */
    public function testCreateCoreV1NamespacedBindingBinding()
    {

    }

    /**
     * Test case for createCoreV1NamespacedConfigMap
     *
     * .
     *
     */
    public function testCreateCoreV1NamespacedConfigMap()
    {

    }

    /**
     * Test case for createCoreV1NamespacedEndpoints
     *
     * .
     *
     */
    public function testCreateCoreV1NamespacedEndpoints()
    {

    }

    /**
     * Test case for createCoreV1NamespacedEvent
     *
     * .
     *
     */
    public function testCreateCoreV1NamespacedEvent()
    {

    }

    /**
     * Test case for createCoreV1NamespacedEvictionEviction
     *
     * .
     *
     */
    public function testCreateCoreV1NamespacedEvictionEviction()
    {

    }

    /**
     * Test case for createCoreV1NamespacedLimitRange
     *
     * .
     *
     */
    public function testCreateCoreV1NamespacedLimitRange()
    {

    }

    /**
     * Test case for createCoreV1NamespacedPersistentVolumeClaim
     *
     * .
     *
     */
    public function testCreateCoreV1NamespacedPersistentVolumeClaim()
    {

    }

    /**
     * Test case for createCoreV1NamespacedPod
     *
     * .
     *
     */
    public function testCreateCoreV1NamespacedPod()
    {

    }

    /**
     * Test case for createCoreV1NamespacedPodTemplate
     *
     * .
     *
     */
    public function testCreateCoreV1NamespacedPodTemplate()
    {

    }

    /**
     * Test case for createCoreV1NamespacedReplicationController
     *
     * .
     *
     */
    public function testCreateCoreV1NamespacedReplicationController()
    {

    }

    /**
     * Test case for createCoreV1NamespacedResourceQuota
     *
     * .
     *
     */
    public function testCreateCoreV1NamespacedResourceQuota()
    {

    }

    /**
     * Test case for createCoreV1NamespacedSecret
     *
     * .
     *
     */
    public function testCreateCoreV1NamespacedSecret()
    {

    }

    /**
     * Test case for createCoreV1NamespacedService
     *
     * .
     *
     */
    public function testCreateCoreV1NamespacedService()
    {

    }

    /**
     * Test case for createCoreV1NamespacedServiceAccount
     *
     * .
     *
     */
    public function testCreateCoreV1NamespacedServiceAccount()
    {

    }

    /**
     * Test case for createCoreV1Node
     *
     * .
     *
     */
    public function testCreateCoreV1Node()
    {

    }

    /**
     * Test case for createCoreV1PersistentVolume
     *
     * .
     *
     */
    public function testCreateCoreV1PersistentVolume()
    {

    }

    /**
     * Test case for createCoreV1PersistentVolumeClaimForAllNamespaces
     *
     * .
     *
     */
    public function testCreateCoreV1PersistentVolumeClaimForAllNamespaces()
    {

    }

    /**
     * Test case for createCoreV1PodForAllNamespaces
     *
     * .
     *
     */
    public function testCreateCoreV1PodForAllNamespaces()
    {

    }

    /**
     * Test case for createCoreV1PodTemplateForAllNamespaces
     *
     * .
     *
     */
    public function testCreateCoreV1PodTemplateForAllNamespaces()
    {

    }

    /**
     * Test case for createCoreV1ReplicationControllerForAllNamespaces
     *
     * .
     *
     */
    public function testCreateCoreV1ReplicationControllerForAllNamespaces()
    {

    }

    /**
     * Test case for createCoreV1ResourceQuotaForAllNamespaces
     *
     * .
     *
     */
    public function testCreateCoreV1ResourceQuotaForAllNamespaces()
    {

    }

    /**
     * Test case for createCoreV1SecretForAllNamespaces
     *
     * .
     *
     */
    public function testCreateCoreV1SecretForAllNamespaces()
    {

    }

    /**
     * Test case for createCoreV1SecurityContextConstraints
     *
     * .
     *
     */
    public function testCreateCoreV1SecurityContextConstraints()
    {

    }

    /**
     * Test case for createCoreV1ServiceAccountForAllNamespaces
     *
     * .
     *
     */
    public function testCreateCoreV1ServiceAccountForAllNamespaces()
    {

    }

    /**
     * Test case for createCoreV1ServiceForAllNamespaces
     *
     * .
     *
     */
    public function testCreateCoreV1ServiceForAllNamespaces()
    {

    }

    /**
     * Test case for deleteCoreV1CollectionNamespace
     *
     * .
     *
     */
    public function testDeleteCoreV1CollectionNamespace()
    {

    }

    /**
     * Test case for deleteCoreV1CollectionNamespacedConfigMap
     *
     * .
     *
     */
    public function testDeleteCoreV1CollectionNamespacedConfigMap()
    {

    }

    /**
     * Test case for deleteCoreV1CollectionNamespacedEndpoints
     *
     * .
     *
     */
    public function testDeleteCoreV1CollectionNamespacedEndpoints()
    {

    }

    /**
     * Test case for deleteCoreV1CollectionNamespacedEvent
     *
     * .
     *
     */
    public function testDeleteCoreV1CollectionNamespacedEvent()
    {

    }

    /**
     * Test case for deleteCoreV1CollectionNamespacedLimitRange
     *
     * .
     *
     */
    public function testDeleteCoreV1CollectionNamespacedLimitRange()
    {

    }

    /**
     * Test case for deleteCoreV1CollectionNamespacedPersistentVolumeClaim
     *
     * .
     *
     */
    public function testDeleteCoreV1CollectionNamespacedPersistentVolumeClaim()
    {

    }

    /**
     * Test case for deleteCoreV1CollectionNamespacedPod
     *
     * .
     *
     */
    public function testDeleteCoreV1CollectionNamespacedPod()
    {

    }

    /**
     * Test case for deleteCoreV1CollectionNamespacedPodTemplate
     *
     * .
     *
     */
    public function testDeleteCoreV1CollectionNamespacedPodTemplate()
    {

    }

    /**
     * Test case for deleteCoreV1CollectionNamespacedReplicationController
     *
     * .
     *
     */
    public function testDeleteCoreV1CollectionNamespacedReplicationController()
    {

    }

    /**
     * Test case for deleteCoreV1CollectionNamespacedResourceQuota
     *
     * .
     *
     */
    public function testDeleteCoreV1CollectionNamespacedResourceQuota()
    {

    }

    /**
     * Test case for deleteCoreV1CollectionNamespacedSecret
     *
     * .
     *
     */
    public function testDeleteCoreV1CollectionNamespacedSecret()
    {

    }

    /**
     * Test case for deleteCoreV1CollectionNamespacedServiceAccount
     *
     * .
     *
     */
    public function testDeleteCoreV1CollectionNamespacedServiceAccount()
    {

    }

    /**
     * Test case for deleteCoreV1CollectionNode
     *
     * .
     *
     */
    public function testDeleteCoreV1CollectionNode()
    {

    }

    /**
     * Test case for deleteCoreV1CollectionPersistentVolume
     *
     * .
     *
     */
    public function testDeleteCoreV1CollectionPersistentVolume()
    {

    }

    /**
     * Test case for deleteCoreV1CollectionSecurityContextConstraints
     *
     * .
     *
     */
    public function testDeleteCoreV1CollectionSecurityContextConstraints()
    {

    }

    /**
     * Test case for deleteCoreV1Namespace
     *
     * .
     *
     */
    public function testDeleteCoreV1Namespace()
    {

    }

    /**
     * Test case for deleteCoreV1NamespacedConfigMap
     *
     * .
     *
     */
    public function testDeleteCoreV1NamespacedConfigMap()
    {

    }

    /**
     * Test case for deleteCoreV1NamespacedEndpoints
     *
     * .
     *
     */
    public function testDeleteCoreV1NamespacedEndpoints()
    {

    }

    /**
     * Test case for deleteCoreV1NamespacedEvent
     *
     * .
     *
     */
    public function testDeleteCoreV1NamespacedEvent()
    {

    }

    /**
     * Test case for deleteCoreV1NamespacedLimitRange
     *
     * .
     *
     */
    public function testDeleteCoreV1NamespacedLimitRange()
    {

    }

    /**
     * Test case for deleteCoreV1NamespacedPersistentVolumeClaim
     *
     * .
     *
     */
    public function testDeleteCoreV1NamespacedPersistentVolumeClaim()
    {

    }

    /**
     * Test case for deleteCoreV1NamespacedPod
     *
     * .
     *
     */
    public function testDeleteCoreV1NamespacedPod()
    {

    }

    /**
     * Test case for deleteCoreV1NamespacedPodTemplate
     *
     * .
     *
     */
    public function testDeleteCoreV1NamespacedPodTemplate()
    {

    }

    /**
     * Test case for deleteCoreV1NamespacedReplicationController
     *
     * .
     *
     */
    public function testDeleteCoreV1NamespacedReplicationController()
    {

    }

    /**
     * Test case for deleteCoreV1NamespacedResourceQuota
     *
     * .
     *
     */
    public function testDeleteCoreV1NamespacedResourceQuota()
    {

    }

    /**
     * Test case for deleteCoreV1NamespacedSecret
     *
     * .
     *
     */
    public function testDeleteCoreV1NamespacedSecret()
    {

    }

    /**
     * Test case for deleteCoreV1NamespacedService
     *
     * .
     *
     */
    public function testDeleteCoreV1NamespacedService()
    {

    }

    /**
     * Test case for deleteCoreV1NamespacedServiceAccount
     *
     * .
     *
     */
    public function testDeleteCoreV1NamespacedServiceAccount()
    {

    }

    /**
     * Test case for deleteCoreV1Node
     *
     * .
     *
     */
    public function testDeleteCoreV1Node()
    {

    }

    /**
     * Test case for deleteCoreV1PersistentVolume
     *
     * .
     *
     */
    public function testDeleteCoreV1PersistentVolume()
    {

    }

    /**
     * Test case for deleteCoreV1SecurityContextConstraints
     *
     * .
     *
     */
    public function testDeleteCoreV1SecurityContextConstraints()
    {

    }

    /**
     * Test case for getCoreV1APIResources
     *
     * .
     *
     */
    public function testGetCoreV1APIResources()
    {

    }

    /**
     * Test case for listCoreV1ComponentStatus
     *
     * .
     *
     */
    public function testListCoreV1ComponentStatus()
    {

    }

    /**
     * Test case for listCoreV1ConfigMapForAllNamespaces
     *
     * .
     *
     */
    public function testListCoreV1ConfigMapForAllNamespaces()
    {

    }

    /**
     * Test case for listCoreV1EndpointsForAllNamespaces
     *
     * .
     *
     */
    public function testListCoreV1EndpointsForAllNamespaces()
    {

    }

    /**
     * Test case for listCoreV1EventForAllNamespaces
     *
     * .
     *
     */
    public function testListCoreV1EventForAllNamespaces()
    {

    }

    /**
     * Test case for listCoreV1LimitRangeForAllNamespaces
     *
     * .
     *
     */
    public function testListCoreV1LimitRangeForAllNamespaces()
    {

    }

    /**
     * Test case for listCoreV1Namespace
     *
     * .
     *
     */
    public function testListCoreV1Namespace()
    {

    }

    /**
     * Test case for listCoreV1NamespacedConfigMap
     *
     * .
     *
     */
    public function testListCoreV1NamespacedConfigMap()
    {

    }

    /**
     * Test case for listCoreV1NamespacedEndpoints
     *
     * .
     *
     */
    public function testListCoreV1NamespacedEndpoints()
    {

    }

    /**
     * Test case for listCoreV1NamespacedEvent
     *
     * .
     *
     */
    public function testListCoreV1NamespacedEvent()
    {

    }

    /**
     * Test case for listCoreV1NamespacedLimitRange
     *
     * .
     *
     */
    public function testListCoreV1NamespacedLimitRange()
    {

    }

    /**
     * Test case for listCoreV1NamespacedPersistentVolumeClaim
     *
     * .
     *
     */
    public function testListCoreV1NamespacedPersistentVolumeClaim()
    {

    }

    /**
     * Test case for listCoreV1NamespacedPod
     *
     * .
     *
     */
    public function testListCoreV1NamespacedPod()
    {

    }

    /**
     * Test case for listCoreV1NamespacedPodTemplate
     *
     * .
     *
     */
    public function testListCoreV1NamespacedPodTemplate()
    {

    }

    /**
     * Test case for listCoreV1NamespacedReplicationController
     *
     * .
     *
     */
    public function testListCoreV1NamespacedReplicationController()
    {

    }

    /**
     * Test case for listCoreV1NamespacedResourceQuota
     *
     * .
     *
     */
    public function testListCoreV1NamespacedResourceQuota()
    {

    }

    /**
     * Test case for listCoreV1NamespacedSecret
     *
     * .
     *
     */
    public function testListCoreV1NamespacedSecret()
    {

    }

    /**
     * Test case for listCoreV1NamespacedService
     *
     * .
     *
     */
    public function testListCoreV1NamespacedService()
    {

    }

    /**
     * Test case for listCoreV1NamespacedServiceAccount
     *
     * .
     *
     */
    public function testListCoreV1NamespacedServiceAccount()
    {

    }

    /**
     * Test case for listCoreV1Node
     *
     * .
     *
     */
    public function testListCoreV1Node()
    {

    }

    /**
     * Test case for listCoreV1PersistentVolume
     *
     * .
     *
     */
    public function testListCoreV1PersistentVolume()
    {

    }

    /**
     * Test case for listCoreV1PersistentVolumeClaimForAllNamespaces
     *
     * .
     *
     */
    public function testListCoreV1PersistentVolumeClaimForAllNamespaces()
    {

    }

    /**
     * Test case for listCoreV1PodForAllNamespaces
     *
     * .
     *
     */
    public function testListCoreV1PodForAllNamespaces()
    {

    }

    /**
     * Test case for listCoreV1PodTemplateForAllNamespaces
     *
     * .
     *
     */
    public function testListCoreV1PodTemplateForAllNamespaces()
    {

    }

    /**
     * Test case for listCoreV1ReplicationControllerForAllNamespaces
     *
     * .
     *
     */
    public function testListCoreV1ReplicationControllerForAllNamespaces()
    {

    }

    /**
     * Test case for listCoreV1ResourceQuotaForAllNamespaces
     *
     * .
     *
     */
    public function testListCoreV1ResourceQuotaForAllNamespaces()
    {

    }

    /**
     * Test case for listCoreV1SecretForAllNamespaces
     *
     * .
     *
     */
    public function testListCoreV1SecretForAllNamespaces()
    {

    }

    /**
     * Test case for listCoreV1SecurityContextConstraints
     *
     * .
     *
     */
    public function testListCoreV1SecurityContextConstraints()
    {

    }

    /**
     * Test case for listCoreV1ServiceAccountForAllNamespaces
     *
     * .
     *
     */
    public function testListCoreV1ServiceAccountForAllNamespaces()
    {

    }

    /**
     * Test case for listCoreV1ServiceForAllNamespaces
     *
     * .
     *
     */
    public function testListCoreV1ServiceForAllNamespaces()
    {

    }

    /**
     * Test case for patchCoreV1Namespace
     *
     * .
     *
     */
    public function testPatchCoreV1Namespace()
    {

    }

    /**
     * Test case for patchCoreV1NamespaceStatus
     *
     * .
     *
     */
    public function testPatchCoreV1NamespaceStatus()
    {

    }

    /**
     * Test case for patchCoreV1NamespacedConfigMap
     *
     * .
     *
     */
    public function testPatchCoreV1NamespacedConfigMap()
    {

    }

    /**
     * Test case for patchCoreV1NamespacedEndpoints
     *
     * .
     *
     */
    public function testPatchCoreV1NamespacedEndpoints()
    {

    }

    /**
     * Test case for patchCoreV1NamespacedEvent
     *
     * .
     *
     */
    public function testPatchCoreV1NamespacedEvent()
    {

    }

    /**
     * Test case for patchCoreV1NamespacedLimitRange
     *
     * .
     *
     */
    public function testPatchCoreV1NamespacedLimitRange()
    {

    }

    /**
     * Test case for patchCoreV1NamespacedPersistentVolumeClaim
     *
     * .
     *
     */
    public function testPatchCoreV1NamespacedPersistentVolumeClaim()
    {

    }

    /**
     * Test case for patchCoreV1NamespacedPersistentVolumeClaimStatus
     *
     * .
     *
     */
    public function testPatchCoreV1NamespacedPersistentVolumeClaimStatus()
    {

    }

    /**
     * Test case for patchCoreV1NamespacedPod
     *
     * .
     *
     */
    public function testPatchCoreV1NamespacedPod()
    {

    }

    /**
     * Test case for patchCoreV1NamespacedPodStatus
     *
     * .
     *
     */
    public function testPatchCoreV1NamespacedPodStatus()
    {

    }

    /**
     * Test case for patchCoreV1NamespacedPodTemplate
     *
     * .
     *
     */
    public function testPatchCoreV1NamespacedPodTemplate()
    {

    }

    /**
     * Test case for patchCoreV1NamespacedReplicationController
     *
     * .
     *
     */
    public function testPatchCoreV1NamespacedReplicationController()
    {

    }

    /**
     * Test case for patchCoreV1NamespacedReplicationControllerStatus
     *
     * .
     *
     */
    public function testPatchCoreV1NamespacedReplicationControllerStatus()
    {

    }

    /**
     * Test case for patchCoreV1NamespacedResourceQuota
     *
     * .
     *
     */
    public function testPatchCoreV1NamespacedResourceQuota()
    {

    }

    /**
     * Test case for patchCoreV1NamespacedResourceQuotaStatus
     *
     * .
     *
     */
    public function testPatchCoreV1NamespacedResourceQuotaStatus()
    {

    }

    /**
     * Test case for patchCoreV1NamespacedScaleScale
     *
     * .
     *
     */
    public function testPatchCoreV1NamespacedScaleScale()
    {

    }

    /**
     * Test case for patchCoreV1NamespacedSecret
     *
     * .
     *
     */
    public function testPatchCoreV1NamespacedSecret()
    {

    }

    /**
     * Test case for patchCoreV1NamespacedService
     *
     * .
     *
     */
    public function testPatchCoreV1NamespacedService()
    {

    }

    /**
     * Test case for patchCoreV1NamespacedServiceAccount
     *
     * .
     *
     */
    public function testPatchCoreV1NamespacedServiceAccount()
    {

    }

    /**
     * Test case for patchCoreV1NamespacedServiceStatus
     *
     * .
     *
     */
    public function testPatchCoreV1NamespacedServiceStatus()
    {

    }

    /**
     * Test case for patchCoreV1Node
     *
     * .
     *
     */
    public function testPatchCoreV1Node()
    {

    }

    /**
     * Test case for patchCoreV1NodeStatus
     *
     * .
     *
     */
    public function testPatchCoreV1NodeStatus()
    {

    }

    /**
     * Test case for patchCoreV1PersistentVolume
     *
     * .
     *
     */
    public function testPatchCoreV1PersistentVolume()
    {

    }

    /**
     * Test case for patchCoreV1PersistentVolumeStatus
     *
     * .
     *
     */
    public function testPatchCoreV1PersistentVolumeStatus()
    {

    }

    /**
     * Test case for patchCoreV1SecurityContextConstraints
     *
     * .
     *
     */
    public function testPatchCoreV1SecurityContextConstraints()
    {

    }

    /**
     * Test case for proxyCoreV1DELETENamespacedPod
     *
     * .
     *
     */
    public function testProxyCoreV1DELETENamespacedPod()
    {

    }

    /**
     * Test case for proxyCoreV1DELETENamespacedPodWithPath
     *
     * .
     *
     */
    public function testProxyCoreV1DELETENamespacedPodWithPath()
    {

    }

    /**
     * Test case for proxyCoreV1DELETENamespacedService
     *
     * .
     *
     */
    public function testProxyCoreV1DELETENamespacedService()
    {

    }

    /**
     * Test case for proxyCoreV1DELETENamespacedServiceWithPath
     *
     * .
     *
     */
    public function testProxyCoreV1DELETENamespacedServiceWithPath()
    {

    }

    /**
     * Test case for proxyCoreV1DELETENode
     *
     * .
     *
     */
    public function testProxyCoreV1DELETENode()
    {

    }

    /**
     * Test case for proxyCoreV1DELETENodeWithPath
     *
     * .
     *
     */
    public function testProxyCoreV1DELETENodeWithPath()
    {

    }

    /**
     * Test case for proxyCoreV1GETNamespacedPod
     *
     * .
     *
     */
    public function testProxyCoreV1GETNamespacedPod()
    {

    }

    /**
     * Test case for proxyCoreV1GETNamespacedPodWithPath
     *
     * .
     *
     */
    public function testProxyCoreV1GETNamespacedPodWithPath()
    {

    }

    /**
     * Test case for proxyCoreV1GETNamespacedService
     *
     * .
     *
     */
    public function testProxyCoreV1GETNamespacedService()
    {

    }

    /**
     * Test case for proxyCoreV1GETNamespacedServiceWithPath
     *
     * .
     *
     */
    public function testProxyCoreV1GETNamespacedServiceWithPath()
    {

    }

    /**
     * Test case for proxyCoreV1GETNode
     *
     * .
     *
     */
    public function testProxyCoreV1GETNode()
    {

    }

    /**
     * Test case for proxyCoreV1GETNodeWithPath
     *
     * .
     *
     */
    public function testProxyCoreV1GETNodeWithPath()
    {

    }

    /**
     * Test case for proxyCoreV1HEADNamespacedPod
     *
     * .
     *
     */
    public function testProxyCoreV1HEADNamespacedPod()
    {

    }

    /**
     * Test case for proxyCoreV1HEADNamespacedPodWithPath
     *
     * .
     *
     */
    public function testProxyCoreV1HEADNamespacedPodWithPath()
    {

    }

    /**
     * Test case for proxyCoreV1HEADNamespacedService
     *
     * .
     *
     */
    public function testProxyCoreV1HEADNamespacedService()
    {

    }

    /**
     * Test case for proxyCoreV1HEADNamespacedServiceWithPath
     *
     * .
     *
     */
    public function testProxyCoreV1HEADNamespacedServiceWithPath()
    {

    }

    /**
     * Test case for proxyCoreV1HEADNode
     *
     * .
     *
     */
    public function testProxyCoreV1HEADNode()
    {

    }

    /**
     * Test case for proxyCoreV1HEADNodeWithPath
     *
     * .
     *
     */
    public function testProxyCoreV1HEADNodeWithPath()
    {

    }

    /**
     * Test case for proxyCoreV1OPTIONSNamespacedPod
     *
     * .
     *
     */
    public function testProxyCoreV1OPTIONSNamespacedPod()
    {

    }

    /**
     * Test case for proxyCoreV1OPTIONSNamespacedPodWithPath
     *
     * .
     *
     */
    public function testProxyCoreV1OPTIONSNamespacedPodWithPath()
    {

    }

    /**
     * Test case for proxyCoreV1OPTIONSNamespacedService
     *
     * .
     *
     */
    public function testProxyCoreV1OPTIONSNamespacedService()
    {

    }

    /**
     * Test case for proxyCoreV1OPTIONSNamespacedServiceWithPath
     *
     * .
     *
     */
    public function testProxyCoreV1OPTIONSNamespacedServiceWithPath()
    {

    }

    /**
     * Test case for proxyCoreV1OPTIONSNode
     *
     * .
     *
     */
    public function testProxyCoreV1OPTIONSNode()
    {

    }

    /**
     * Test case for proxyCoreV1OPTIONSNodeWithPath
     *
     * .
     *
     */
    public function testProxyCoreV1OPTIONSNodeWithPath()
    {

    }

    /**
     * Test case for proxyCoreV1PATCHNamespacedPod
     *
     * .
     *
     */
    public function testProxyCoreV1PATCHNamespacedPod()
    {

    }

    /**
     * Test case for proxyCoreV1PATCHNamespacedPodWithPath
     *
     * .
     *
     */
    public function testProxyCoreV1PATCHNamespacedPodWithPath()
    {

    }

    /**
     * Test case for proxyCoreV1PATCHNamespacedService
     *
     * .
     *
     */
    public function testProxyCoreV1PATCHNamespacedService()
    {

    }

    /**
     * Test case for proxyCoreV1PATCHNamespacedServiceWithPath
     *
     * .
     *
     */
    public function testProxyCoreV1PATCHNamespacedServiceWithPath()
    {

    }

    /**
     * Test case for proxyCoreV1PATCHNode
     *
     * .
     *
     */
    public function testProxyCoreV1PATCHNode()
    {

    }

    /**
     * Test case for proxyCoreV1PATCHNodeWithPath
     *
     * .
     *
     */
    public function testProxyCoreV1PATCHNodeWithPath()
    {

    }

    /**
     * Test case for proxyCoreV1POSTNamespacedPod
     *
     * .
     *
     */
    public function testProxyCoreV1POSTNamespacedPod()
    {

    }

    /**
     * Test case for proxyCoreV1POSTNamespacedPodWithPath
     *
     * .
     *
     */
    public function testProxyCoreV1POSTNamespacedPodWithPath()
    {

    }

    /**
     * Test case for proxyCoreV1POSTNamespacedService
     *
     * .
     *
     */
    public function testProxyCoreV1POSTNamespacedService()
    {

    }

    /**
     * Test case for proxyCoreV1POSTNamespacedServiceWithPath
     *
     * .
     *
     */
    public function testProxyCoreV1POSTNamespacedServiceWithPath()
    {

    }

    /**
     * Test case for proxyCoreV1POSTNode
     *
     * .
     *
     */
    public function testProxyCoreV1POSTNode()
    {

    }

    /**
     * Test case for proxyCoreV1POSTNodeWithPath
     *
     * .
     *
     */
    public function testProxyCoreV1POSTNodeWithPath()
    {

    }

    /**
     * Test case for proxyCoreV1PUTNamespacedPod
     *
     * .
     *
     */
    public function testProxyCoreV1PUTNamespacedPod()
    {

    }

    /**
     * Test case for proxyCoreV1PUTNamespacedPodWithPath
     *
     * .
     *
     */
    public function testProxyCoreV1PUTNamespacedPodWithPath()
    {

    }

    /**
     * Test case for proxyCoreV1PUTNamespacedService
     *
     * .
     *
     */
    public function testProxyCoreV1PUTNamespacedService()
    {

    }

    /**
     * Test case for proxyCoreV1PUTNamespacedServiceWithPath
     *
     * .
     *
     */
    public function testProxyCoreV1PUTNamespacedServiceWithPath()
    {

    }

    /**
     * Test case for proxyCoreV1PUTNode
     *
     * .
     *
     */
    public function testProxyCoreV1PUTNode()
    {

    }

    /**
     * Test case for proxyCoreV1PUTNodeWithPath
     *
     * .
     *
     */
    public function testProxyCoreV1PUTNodeWithPath()
    {

    }

    /**
     * Test case for readCoreV1ComponentStatus
     *
     * .
     *
     */
    public function testReadCoreV1ComponentStatus()
    {

    }

    /**
     * Test case for readCoreV1Namespace
     *
     * .
     *
     */
    public function testReadCoreV1Namespace()
    {

    }

    /**
     * Test case for readCoreV1NamespaceStatus
     *
     * .
     *
     */
    public function testReadCoreV1NamespaceStatus()
    {

    }

    /**
     * Test case for readCoreV1NamespacedConfigMap
     *
     * .
     *
     */
    public function testReadCoreV1NamespacedConfigMap()
    {

    }

    /**
     * Test case for readCoreV1NamespacedEndpoints
     *
     * .
     *
     */
    public function testReadCoreV1NamespacedEndpoints()
    {

    }

    /**
     * Test case for readCoreV1NamespacedEvent
     *
     * .
     *
     */
    public function testReadCoreV1NamespacedEvent()
    {

    }

    /**
     * Test case for readCoreV1NamespacedLimitRange
     *
     * .
     *
     */
    public function testReadCoreV1NamespacedLimitRange()
    {

    }

    /**
     * Test case for readCoreV1NamespacedPersistentVolumeClaim
     *
     * .
     *
     */
    public function testReadCoreV1NamespacedPersistentVolumeClaim()
    {

    }

    /**
     * Test case for readCoreV1NamespacedPersistentVolumeClaimStatus
     *
     * .
     *
     */
    public function testReadCoreV1NamespacedPersistentVolumeClaimStatus()
    {

    }

    /**
     * Test case for readCoreV1NamespacedPod
     *
     * .
     *
     */
    public function testReadCoreV1NamespacedPod()
    {

    }

    /**
     * Test case for readCoreV1NamespacedPodLog
     *
     * .
     *
     */
    public function testReadCoreV1NamespacedPodLog()
    {

    }

    /**
     * Test case for readCoreV1NamespacedPodStatus
     *
     * .
     *
     */
    public function testReadCoreV1NamespacedPodStatus()
    {

    }

    /**
     * Test case for readCoreV1NamespacedPodTemplate
     *
     * .
     *
     */
    public function testReadCoreV1NamespacedPodTemplate()
    {

    }

    /**
     * Test case for readCoreV1NamespacedReplicationController
     *
     * .
     *
     */
    public function testReadCoreV1NamespacedReplicationController()
    {

    }

    /**
     * Test case for readCoreV1NamespacedReplicationControllerStatus
     *
     * .
     *
     */
    public function testReadCoreV1NamespacedReplicationControllerStatus()
    {

    }

    /**
     * Test case for readCoreV1NamespacedResourceQuota
     *
     * .
     *
     */
    public function testReadCoreV1NamespacedResourceQuota()
    {

    }

    /**
     * Test case for readCoreV1NamespacedResourceQuotaStatus
     *
     * .
     *
     */
    public function testReadCoreV1NamespacedResourceQuotaStatus()
    {

    }

    /**
     * Test case for readCoreV1NamespacedScaleScale
     *
     * .
     *
     */
    public function testReadCoreV1NamespacedScaleScale()
    {

    }

    /**
     * Test case for readCoreV1NamespacedSecret
     *
     * .
     *
     */
    public function testReadCoreV1NamespacedSecret()
    {

    }

    /**
     * Test case for readCoreV1NamespacedService
     *
     * .
     *
     */
    public function testReadCoreV1NamespacedService()
    {

    }

    /**
     * Test case for readCoreV1NamespacedServiceAccount
     *
     * .
     *
     */
    public function testReadCoreV1NamespacedServiceAccount()
    {

    }

    /**
     * Test case for readCoreV1NamespacedServiceStatus
     *
     * .
     *
     */
    public function testReadCoreV1NamespacedServiceStatus()
    {

    }

    /**
     * Test case for readCoreV1Node
     *
     * .
     *
     */
    public function testReadCoreV1Node()
    {

    }

    /**
     * Test case for readCoreV1NodeStatus
     *
     * .
     *
     */
    public function testReadCoreV1NodeStatus()
    {

    }

    /**
     * Test case for readCoreV1PersistentVolume
     *
     * .
     *
     */
    public function testReadCoreV1PersistentVolume()
    {

    }

    /**
     * Test case for readCoreV1PersistentVolumeStatus
     *
     * .
     *
     */
    public function testReadCoreV1PersistentVolumeStatus()
    {

    }

    /**
     * Test case for readCoreV1SecurityContextConstraints
     *
     * .
     *
     */
    public function testReadCoreV1SecurityContextConstraints()
    {

    }

    /**
     * Test case for replaceCoreV1Namespace
     *
     * .
     *
     */
    public function testReplaceCoreV1Namespace()
    {

    }

    /**
     * Test case for replaceCoreV1NamespaceFinalize
     *
     * .
     *
     */
    public function testReplaceCoreV1NamespaceFinalize()
    {

    }

    /**
     * Test case for replaceCoreV1NamespaceStatus
     *
     * .
     *
     */
    public function testReplaceCoreV1NamespaceStatus()
    {

    }

    /**
     * Test case for replaceCoreV1NamespacedConfigMap
     *
     * .
     *
     */
    public function testReplaceCoreV1NamespacedConfigMap()
    {

    }

    /**
     * Test case for replaceCoreV1NamespacedEndpoints
     *
     * .
     *
     */
    public function testReplaceCoreV1NamespacedEndpoints()
    {

    }

    /**
     * Test case for replaceCoreV1NamespacedEvent
     *
     * .
     *
     */
    public function testReplaceCoreV1NamespacedEvent()
    {

    }

    /**
     * Test case for replaceCoreV1NamespacedLimitRange
     *
     * .
     *
     */
    public function testReplaceCoreV1NamespacedLimitRange()
    {

    }

    /**
     * Test case for replaceCoreV1NamespacedPersistentVolumeClaim
     *
     * .
     *
     */
    public function testReplaceCoreV1NamespacedPersistentVolumeClaim()
    {

    }

    /**
     * Test case for replaceCoreV1NamespacedPersistentVolumeClaimStatus
     *
     * .
     *
     */
    public function testReplaceCoreV1NamespacedPersistentVolumeClaimStatus()
    {

    }

    /**
     * Test case for replaceCoreV1NamespacedPod
     *
     * .
     *
     */
    public function testReplaceCoreV1NamespacedPod()
    {

    }

    /**
     * Test case for replaceCoreV1NamespacedPodStatus
     *
     * .
     *
     */
    public function testReplaceCoreV1NamespacedPodStatus()
    {

    }

    /**
     * Test case for replaceCoreV1NamespacedPodTemplate
     *
     * .
     *
     */
    public function testReplaceCoreV1NamespacedPodTemplate()
    {

    }

    /**
     * Test case for replaceCoreV1NamespacedReplicationController
     *
     * .
     *
     */
    public function testReplaceCoreV1NamespacedReplicationController()
    {

    }

    /**
     * Test case for replaceCoreV1NamespacedReplicationControllerStatus
     *
     * .
     *
     */
    public function testReplaceCoreV1NamespacedReplicationControllerStatus()
    {

    }

    /**
     * Test case for replaceCoreV1NamespacedResourceQuota
     *
     * .
     *
     */
    public function testReplaceCoreV1NamespacedResourceQuota()
    {

    }

    /**
     * Test case for replaceCoreV1NamespacedResourceQuotaStatus
     *
     * .
     *
     */
    public function testReplaceCoreV1NamespacedResourceQuotaStatus()
    {

    }

    /**
     * Test case for replaceCoreV1NamespacedScaleScale
     *
     * .
     *
     */
    public function testReplaceCoreV1NamespacedScaleScale()
    {

    }

    /**
     * Test case for replaceCoreV1NamespacedSecret
     *
     * .
     *
     */
    public function testReplaceCoreV1NamespacedSecret()
    {

    }

    /**
     * Test case for replaceCoreV1NamespacedService
     *
     * .
     *
     */
    public function testReplaceCoreV1NamespacedService()
    {

    }

    /**
     * Test case for replaceCoreV1NamespacedServiceAccount
     *
     * .
     *
     */
    public function testReplaceCoreV1NamespacedServiceAccount()
    {

    }

    /**
     * Test case for replaceCoreV1NamespacedServiceStatus
     *
     * .
     *
     */
    public function testReplaceCoreV1NamespacedServiceStatus()
    {

    }

    /**
     * Test case for replaceCoreV1Node
     *
     * .
     *
     */
    public function testReplaceCoreV1Node()
    {

    }

    /**
     * Test case for replaceCoreV1NodeStatus
     *
     * .
     *
     */
    public function testReplaceCoreV1NodeStatus()
    {

    }

    /**
     * Test case for replaceCoreV1PersistentVolume
     *
     * .
     *
     */
    public function testReplaceCoreV1PersistentVolume()
    {

    }

    /**
     * Test case for replaceCoreV1PersistentVolumeStatus
     *
     * .
     *
     */
    public function testReplaceCoreV1PersistentVolumeStatus()
    {

    }

    /**
     * Test case for replaceCoreV1SecurityContextConstraints
     *
     * .
     *
     */
    public function testReplaceCoreV1SecurityContextConstraints()
    {

    }

    /**
     * Test case for watchCoreV1ConfigMapListForAllNamespaces
     *
     * .
     *
     */
    public function testWatchCoreV1ConfigMapListForAllNamespaces()
    {

    }

    /**
     * Test case for watchCoreV1EndpointsListForAllNamespaces
     *
     * .
     *
     */
    public function testWatchCoreV1EndpointsListForAllNamespaces()
    {

    }

    /**
     * Test case for watchCoreV1EventListForAllNamespaces
     *
     * .
     *
     */
    public function testWatchCoreV1EventListForAllNamespaces()
    {

    }

    /**
     * Test case for watchCoreV1LimitRangeListForAllNamespaces
     *
     * .
     *
     */
    public function testWatchCoreV1LimitRangeListForAllNamespaces()
    {

    }

    /**
     * Test case for watchCoreV1Namespace
     *
     * .
     *
     */
    public function testWatchCoreV1Namespace()
    {

    }

    /**
     * Test case for watchCoreV1NamespaceList
     *
     * .
     *
     */
    public function testWatchCoreV1NamespaceList()
    {

    }

    /**
     * Test case for watchCoreV1NamespacedConfigMap
     *
     * .
     *
     */
    public function testWatchCoreV1NamespacedConfigMap()
    {

    }

    /**
     * Test case for watchCoreV1NamespacedConfigMapList
     *
     * .
     *
     */
    public function testWatchCoreV1NamespacedConfigMapList()
    {

    }

    /**
     * Test case for watchCoreV1NamespacedEndpoints
     *
     * .
     *
     */
    public function testWatchCoreV1NamespacedEndpoints()
    {

    }

    /**
     * Test case for watchCoreV1NamespacedEndpointsList
     *
     * .
     *
     */
    public function testWatchCoreV1NamespacedEndpointsList()
    {

    }

    /**
     * Test case for watchCoreV1NamespacedEvent
     *
     * .
     *
     */
    public function testWatchCoreV1NamespacedEvent()
    {

    }

    /**
     * Test case for watchCoreV1NamespacedEventList
     *
     * .
     *
     */
    public function testWatchCoreV1NamespacedEventList()
    {

    }

    /**
     * Test case for watchCoreV1NamespacedLimitRange
     *
     * .
     *
     */
    public function testWatchCoreV1NamespacedLimitRange()
    {

    }

    /**
     * Test case for watchCoreV1NamespacedLimitRangeList
     *
     * .
     *
     */
    public function testWatchCoreV1NamespacedLimitRangeList()
    {

    }

    /**
     * Test case for watchCoreV1NamespacedPersistentVolumeClaim
     *
     * .
     *
     */
    public function testWatchCoreV1NamespacedPersistentVolumeClaim()
    {

    }

    /**
     * Test case for watchCoreV1NamespacedPersistentVolumeClaimList
     *
     * .
     *
     */
    public function testWatchCoreV1NamespacedPersistentVolumeClaimList()
    {

    }

    /**
     * Test case for watchCoreV1NamespacedPod
     *
     * .
     *
     */
    public function testWatchCoreV1NamespacedPod()
    {

    }

    /**
     * Test case for watchCoreV1NamespacedPodList
     *
     * .
     *
     */
    public function testWatchCoreV1NamespacedPodList()
    {

    }

    /**
     * Test case for watchCoreV1NamespacedPodTemplate
     *
     * .
     *
     */
    public function testWatchCoreV1NamespacedPodTemplate()
    {

    }

    /**
     * Test case for watchCoreV1NamespacedPodTemplateList
     *
     * .
     *
     */
    public function testWatchCoreV1NamespacedPodTemplateList()
    {

    }

    /**
     * Test case for watchCoreV1NamespacedReplicationController
     *
     * .
     *
     */
    public function testWatchCoreV1NamespacedReplicationController()
    {

    }

    /**
     * Test case for watchCoreV1NamespacedReplicationControllerList
     *
     * .
     *
     */
    public function testWatchCoreV1NamespacedReplicationControllerList()
    {

    }

    /**
     * Test case for watchCoreV1NamespacedResourceQuota
     *
     * .
     *
     */
    public function testWatchCoreV1NamespacedResourceQuota()
    {

    }

    /**
     * Test case for watchCoreV1NamespacedResourceQuotaList
     *
     * .
     *
     */
    public function testWatchCoreV1NamespacedResourceQuotaList()
    {

    }

    /**
     * Test case for watchCoreV1NamespacedSecret
     *
     * .
     *
     */
    public function testWatchCoreV1NamespacedSecret()
    {

    }

    /**
     * Test case for watchCoreV1NamespacedSecretList
     *
     * .
     *
     */
    public function testWatchCoreV1NamespacedSecretList()
    {

    }

    /**
     * Test case for watchCoreV1NamespacedService
     *
     * .
     *
     */
    public function testWatchCoreV1NamespacedService()
    {

    }

    /**
     * Test case for watchCoreV1NamespacedServiceAccount
     *
     * .
     *
     */
    public function testWatchCoreV1NamespacedServiceAccount()
    {

    }

    /**
     * Test case for watchCoreV1NamespacedServiceAccountList
     *
     * .
     *
     */
    public function testWatchCoreV1NamespacedServiceAccountList()
    {

    }

    /**
     * Test case for watchCoreV1NamespacedServiceList
     *
     * .
     *
     */
    public function testWatchCoreV1NamespacedServiceList()
    {

    }

    /**
     * Test case for watchCoreV1Node
     *
     * .
     *
     */
    public function testWatchCoreV1Node()
    {

    }

    /**
     * Test case for watchCoreV1NodeList
     *
     * .
     *
     */
    public function testWatchCoreV1NodeList()
    {

    }

    /**
     * Test case for watchCoreV1PersistentVolume
     *
     * .
     *
     */
    public function testWatchCoreV1PersistentVolume()
    {

    }

    /**
     * Test case for watchCoreV1PersistentVolumeClaimListForAllNamespaces
     *
     * .
     *
     */
    public function testWatchCoreV1PersistentVolumeClaimListForAllNamespaces()
    {

    }

    /**
     * Test case for watchCoreV1PersistentVolumeList
     *
     * .
     *
     */
    public function testWatchCoreV1PersistentVolumeList()
    {

    }

    /**
     * Test case for watchCoreV1PodListForAllNamespaces
     *
     * .
     *
     */
    public function testWatchCoreV1PodListForAllNamespaces()
    {

    }

    /**
     * Test case for watchCoreV1PodTemplateListForAllNamespaces
     *
     * .
     *
     */
    public function testWatchCoreV1PodTemplateListForAllNamespaces()
    {

    }

    /**
     * Test case for watchCoreV1ReplicationControllerListForAllNamespaces
     *
     * .
     *
     */
    public function testWatchCoreV1ReplicationControllerListForAllNamespaces()
    {

    }

    /**
     * Test case for watchCoreV1ResourceQuotaListForAllNamespaces
     *
     * .
     *
     */
    public function testWatchCoreV1ResourceQuotaListForAllNamespaces()
    {

    }

    /**
     * Test case for watchCoreV1SecretListForAllNamespaces
     *
     * .
     *
     */
    public function testWatchCoreV1SecretListForAllNamespaces()
    {

    }

    /**
     * Test case for watchCoreV1SecurityContextConstraints
     *
     * .
     *
     */
    public function testWatchCoreV1SecurityContextConstraints()
    {

    }

    /**
     * Test case for watchCoreV1SecurityContextConstraintsList
     *
     * .
     *
     */
    public function testWatchCoreV1SecurityContextConstraintsList()
    {

    }

    /**
     * Test case for watchCoreV1ServiceAccountListForAllNamespaces
     *
     * .
     *
     */
    public function testWatchCoreV1ServiceAccountListForAllNamespaces()
    {

    }

    /**
     * Test case for watchCoreV1ServiceListForAllNamespaces
     *
     * .
     *
     */
    public function testWatchCoreV1ServiceListForAllNamespaces()
    {

    }

}
