<?php
/**
 * AuthorizationOpenshiftIo_v1ApiTest
 * PHP version 5
 *
 * @category Class
 * @package  UniversityOfAdelaide\OpenShift
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * OpenShift API (with Kubernetes)
 *
 * OpenShift provides builds, application lifecycle, image content management, and administrative policy on top of Kubernetes. The API allows consistent management of those objects.  All API operations are authenticated via an Authorization bearer token that is provided for service accounts as a generated secret (in JWT form) or via the native OAuth endpoint located at /oauth/authorize. Core infrastructure components may use client certificates that require no authentication.  All API operations return a 'resourceVersion' string that represents the version of the object in the underlying storage. The standard LIST operation performs a snapshot read of the underlying objects, returning a resourceVersion representing a consistent version of the listed objects. The WATCH operation allows all updates to a set of objects after the provided resourceVersion to be observed by a client. By listing and beginning a watch from the returned resourceVersion, clients may observe a consistent view of the state of one or more objects. Note that WATCH always returns the update after the provided resourceVersion. Watch may be extended a limited time in the past - using etcd 2 the watch window is 1000 events (which on a large cluster may only be a few tens of seconds) so clients must explicitly handle the \"watch to old error\" by re-listing.  Objects are divided into two rough categories - those that have a lifecycle and must reflect the state of the cluster, and those that have no state. Objects with lifecycle typically have three main sections:  * 'metadata' common to all objects * a 'spec' that represents the desired state * a 'status' that represents how much of the desired state is reflected on   the cluster at the current time  Objects that have no state have 'metadata' but may lack a 'spec' or 'status' section.  Objects are divided into those that are namespace scoped (only exist inside of a namespace) and those that are cluster scoped (exist outside of a namespace). A namespace scoped resource will be deleted when the namespace is deleted and cannot be created if the namespace has not yet been created or is in the process of deletion. Cluster scoped resources are typically only accessible to admins - resources like nodes, persistent volumes, and cluster policy.  All objects have a schema that is a combination of the 'kind' and 'apiVersion' fields. This schema is additive only for any given version - no backwards incompatible changes are allowed without incrementing the apiVersion. The server will return and accept a number of standard responses that share a common schema - for instance, the common error type is 'metav1.Status' (described below) and will be returned on any error from the API server.  The API is available in multiple serialization formats - the default is JSON (Accept: application/json and Content-Type: application/json) but clients may also use YAML (application/yaml) or the native Protobuf schema (application/vnd.kubernetes.protobuf). Note that the format of the WATCH API call is slightly different - for JSON it returns newline delimited objects while for Protobuf it returns length-delimited frames (4 bytes in network-order) that contain a 'versioned.Watch' Protobuf object.  See the OpenShift documentation at https://docs.openshift.org for more information.
 *
 * OpenAPI spec version: latest
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 *
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace UniversityOfAdelaide\OpenShift;

use \UniversityOfAdelaide\OpenShift\Configuration;
use \UniversityOfAdelaide\OpenShift\ApiClient;
use \UniversityOfAdelaide\OpenShift\ApiException;
use \UniversityOfAdelaide\OpenShift\ObjectSerializer;

/**
 * AuthorizationOpenshiftIo_v1ApiTest Class Doc Comment
 *
 * @category Class
 * @package  UniversityOfAdelaide\OpenShift
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class AuthorizationOpenshiftIo_v1ApiTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass()
    {

    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {

    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {

    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {

    }

    /**
     * Test case for createAuthorizationOpenshiftIoV1ClusterPolicy
     *
     * .
     *
     */
    public function testCreateAuthorizationOpenshiftIoV1ClusterPolicy()
    {

    }

    /**
     * Test case for createAuthorizationOpenshiftIoV1ClusterPolicyBinding
     *
     * .
     *
     */
    public function testCreateAuthorizationOpenshiftIoV1ClusterPolicyBinding()
    {

    }

    /**
     * Test case for createAuthorizationOpenshiftIoV1ClusterRole
     *
     * .
     *
     */
    public function testCreateAuthorizationOpenshiftIoV1ClusterRole()
    {

    }

    /**
     * Test case for createAuthorizationOpenshiftIoV1ClusterRoleBinding
     *
     * .
     *
     */
    public function testCreateAuthorizationOpenshiftIoV1ClusterRoleBinding()
    {

    }

    /**
     * Test case for createAuthorizationOpenshiftIoV1LocalResourceAccessReviewForAllNamespaces
     *
     * .
     *
     */
    public function testCreateAuthorizationOpenshiftIoV1LocalResourceAccessReviewForAllNamespaces()
    {

    }

    /**
     * Test case for createAuthorizationOpenshiftIoV1LocalSubjectAccessReviewForAllNamespaces
     *
     * .
     *
     */
    public function testCreateAuthorizationOpenshiftIoV1LocalSubjectAccessReviewForAllNamespaces()
    {

    }

    /**
     * Test case for createAuthorizationOpenshiftIoV1NamespacedLocalResourceAccessReview
     *
     * .
     *
     */
    public function testCreateAuthorizationOpenshiftIoV1NamespacedLocalResourceAccessReview()
    {

    }

    /**
     * Test case for createAuthorizationOpenshiftIoV1NamespacedLocalSubjectAccessReview
     *
     * .
     *
     */
    public function testCreateAuthorizationOpenshiftIoV1NamespacedLocalSubjectAccessReview()
    {

    }

    /**
     * Test case for createAuthorizationOpenshiftIoV1NamespacedPolicy
     *
     * .
     *
     */
    public function testCreateAuthorizationOpenshiftIoV1NamespacedPolicy()
    {

    }

    /**
     * Test case for createAuthorizationOpenshiftIoV1NamespacedPolicyBinding
     *
     * .
     *
     */
    public function testCreateAuthorizationOpenshiftIoV1NamespacedPolicyBinding()
    {

    }

    /**
     * Test case for createAuthorizationOpenshiftIoV1NamespacedResourceAccessReview
     *
     * .
     *
     */
    public function testCreateAuthorizationOpenshiftIoV1NamespacedResourceAccessReview()
    {

    }

    /**
     * Test case for createAuthorizationOpenshiftIoV1NamespacedRole
     *
     * .
     *
     */
    public function testCreateAuthorizationOpenshiftIoV1NamespacedRole()
    {

    }

    /**
     * Test case for createAuthorizationOpenshiftIoV1NamespacedRoleBinding
     *
     * .
     *
     */
    public function testCreateAuthorizationOpenshiftIoV1NamespacedRoleBinding()
    {

    }

    /**
     * Test case for createAuthorizationOpenshiftIoV1NamespacedRoleBindingRestriction
     *
     * .
     *
     */
    public function testCreateAuthorizationOpenshiftIoV1NamespacedRoleBindingRestriction()
    {

    }

    /**
     * Test case for createAuthorizationOpenshiftIoV1NamespacedSelfSubjectRulesReview
     *
     * .
     *
     */
    public function testCreateAuthorizationOpenshiftIoV1NamespacedSelfSubjectRulesReview()
    {

    }

    /**
     * Test case for createAuthorizationOpenshiftIoV1NamespacedSubjectAccessReview
     *
     * .
     *
     */
    public function testCreateAuthorizationOpenshiftIoV1NamespacedSubjectAccessReview()
    {

    }

    /**
     * Test case for createAuthorizationOpenshiftIoV1NamespacedSubjectRulesReview
     *
     * .
     *
     */
    public function testCreateAuthorizationOpenshiftIoV1NamespacedSubjectRulesReview()
    {

    }

    /**
     * Test case for createAuthorizationOpenshiftIoV1PolicyBindingForAllNamespaces
     *
     * .
     *
     */
    public function testCreateAuthorizationOpenshiftIoV1PolicyBindingForAllNamespaces()
    {

    }

    /**
     * Test case for createAuthorizationOpenshiftIoV1PolicyForAllNamespaces
     *
     * .
     *
     */
    public function testCreateAuthorizationOpenshiftIoV1PolicyForAllNamespaces()
    {

    }

    /**
     * Test case for createAuthorizationOpenshiftIoV1ResourceAccessReviewForAllNamespaces
     *
     * .
     *
     */
    public function testCreateAuthorizationOpenshiftIoV1ResourceAccessReviewForAllNamespaces()
    {

    }

    /**
     * Test case for createAuthorizationOpenshiftIoV1RoleBindingForAllNamespaces
     *
     * .
     *
     */
    public function testCreateAuthorizationOpenshiftIoV1RoleBindingForAllNamespaces()
    {

    }

    /**
     * Test case for createAuthorizationOpenshiftIoV1RoleBindingRestrictionForAllNamespaces
     *
     * .
     *
     */
    public function testCreateAuthorizationOpenshiftIoV1RoleBindingRestrictionForAllNamespaces()
    {

    }

    /**
     * Test case for createAuthorizationOpenshiftIoV1RoleForAllNamespaces
     *
     * .
     *
     */
    public function testCreateAuthorizationOpenshiftIoV1RoleForAllNamespaces()
    {

    }

    /**
     * Test case for createAuthorizationOpenshiftIoV1SelfSubjectRulesReviewForAllNamespaces
     *
     * .
     *
     */
    public function testCreateAuthorizationOpenshiftIoV1SelfSubjectRulesReviewForAllNamespaces()
    {

    }

    /**
     * Test case for createAuthorizationOpenshiftIoV1SubjectAccessReviewForAllNamespaces
     *
     * .
     *
     */
    public function testCreateAuthorizationOpenshiftIoV1SubjectAccessReviewForAllNamespaces()
    {

    }

    /**
     * Test case for createAuthorizationOpenshiftIoV1SubjectRulesReviewForAllNamespaces
     *
     * .
     *
     */
    public function testCreateAuthorizationOpenshiftIoV1SubjectRulesReviewForAllNamespaces()
    {

    }

    /**
     * Test case for deleteAuthorizationOpenshiftIoV1ClusterPolicy
     *
     * .
     *
     */
    public function testDeleteAuthorizationOpenshiftIoV1ClusterPolicy()
    {

    }

    /**
     * Test case for deleteAuthorizationOpenshiftIoV1ClusterPolicyBinding
     *
     * .
     *
     */
    public function testDeleteAuthorizationOpenshiftIoV1ClusterPolicyBinding()
    {

    }

    /**
     * Test case for deleteAuthorizationOpenshiftIoV1ClusterRole
     *
     * .
     *
     */
    public function testDeleteAuthorizationOpenshiftIoV1ClusterRole()
    {

    }

    /**
     * Test case for deleteAuthorizationOpenshiftIoV1ClusterRoleBinding
     *
     * .
     *
     */
    public function testDeleteAuthorizationOpenshiftIoV1ClusterRoleBinding()
    {

    }

    /**
     * Test case for deleteAuthorizationOpenshiftIoV1CollectionClusterPolicy
     *
     * .
     *
     */
    public function testDeleteAuthorizationOpenshiftIoV1CollectionClusterPolicy()
    {

    }

    /**
     * Test case for deleteAuthorizationOpenshiftIoV1CollectionClusterPolicyBinding
     *
     * .
     *
     */
    public function testDeleteAuthorizationOpenshiftIoV1CollectionClusterPolicyBinding()
    {

    }

    /**
     * Test case for deleteAuthorizationOpenshiftIoV1CollectionNamespacedPolicy
     *
     * .
     *
     */
    public function testDeleteAuthorizationOpenshiftIoV1CollectionNamespacedPolicy()
    {

    }

    /**
     * Test case for deleteAuthorizationOpenshiftIoV1CollectionNamespacedPolicyBinding
     *
     * .
     *
     */
    public function testDeleteAuthorizationOpenshiftIoV1CollectionNamespacedPolicyBinding()
    {

    }

    /**
     * Test case for deleteAuthorizationOpenshiftIoV1CollectionNamespacedRoleBindingRestriction
     *
     * .
     *
     */
    public function testDeleteAuthorizationOpenshiftIoV1CollectionNamespacedRoleBindingRestriction()
    {

    }

    /**
     * Test case for deleteAuthorizationOpenshiftIoV1NamespacedPolicy
     *
     * .
     *
     */
    public function testDeleteAuthorizationOpenshiftIoV1NamespacedPolicy()
    {

    }

    /**
     * Test case for deleteAuthorizationOpenshiftIoV1NamespacedPolicyBinding
     *
     * .
     *
     */
    public function testDeleteAuthorizationOpenshiftIoV1NamespacedPolicyBinding()
    {

    }

    /**
     * Test case for deleteAuthorizationOpenshiftIoV1NamespacedRole
     *
     * .
     *
     */
    public function testDeleteAuthorizationOpenshiftIoV1NamespacedRole()
    {

    }

    /**
     * Test case for deleteAuthorizationOpenshiftIoV1NamespacedRoleBinding
     *
     * .
     *
     */
    public function testDeleteAuthorizationOpenshiftIoV1NamespacedRoleBinding()
    {

    }

    /**
     * Test case for deleteAuthorizationOpenshiftIoV1NamespacedRoleBindingRestriction
     *
     * .
     *
     */
    public function testDeleteAuthorizationOpenshiftIoV1NamespacedRoleBindingRestriction()
    {

    }

    /**
     * Test case for getAuthorizationOpenshiftIoV1APIResources
     *
     * .
     *
     */
    public function testGetAuthorizationOpenshiftIoV1APIResources()
    {

    }

    /**
     * Test case for listAuthorizationOpenshiftIoV1ClusterPolicy
     *
     * .
     *
     */
    public function testListAuthorizationOpenshiftIoV1ClusterPolicy()
    {

    }

    /**
     * Test case for listAuthorizationOpenshiftIoV1ClusterPolicyBinding
     *
     * .
     *
     */
    public function testListAuthorizationOpenshiftIoV1ClusterPolicyBinding()
    {

    }

    /**
     * Test case for listAuthorizationOpenshiftIoV1ClusterRole
     *
     * .
     *
     */
    public function testListAuthorizationOpenshiftIoV1ClusterRole()
    {

    }

    /**
     * Test case for listAuthorizationOpenshiftIoV1ClusterRoleBinding
     *
     * .
     *
     */
    public function testListAuthorizationOpenshiftIoV1ClusterRoleBinding()
    {

    }

    /**
     * Test case for listAuthorizationOpenshiftIoV1NamespacedPolicy
     *
     * .
     *
     */
    public function testListAuthorizationOpenshiftIoV1NamespacedPolicy()
    {

    }

    /**
     * Test case for listAuthorizationOpenshiftIoV1NamespacedPolicyBinding
     *
     * .
     *
     */
    public function testListAuthorizationOpenshiftIoV1NamespacedPolicyBinding()
    {

    }

    /**
     * Test case for listAuthorizationOpenshiftIoV1NamespacedRole
     *
     * .
     *
     */
    public function testListAuthorizationOpenshiftIoV1NamespacedRole()
    {

    }

    /**
     * Test case for listAuthorizationOpenshiftIoV1NamespacedRoleBinding
     *
     * .
     *
     */
    public function testListAuthorizationOpenshiftIoV1NamespacedRoleBinding()
    {

    }

    /**
     * Test case for listAuthorizationOpenshiftIoV1NamespacedRoleBindingRestriction
     *
     * .
     *
     */
    public function testListAuthorizationOpenshiftIoV1NamespacedRoleBindingRestriction()
    {

    }

    /**
     * Test case for listAuthorizationOpenshiftIoV1PolicyBindingForAllNamespaces
     *
     * .
     *
     */
    public function testListAuthorizationOpenshiftIoV1PolicyBindingForAllNamespaces()
    {

    }

    /**
     * Test case for listAuthorizationOpenshiftIoV1PolicyForAllNamespaces
     *
     * .
     *
     */
    public function testListAuthorizationOpenshiftIoV1PolicyForAllNamespaces()
    {

    }

    /**
     * Test case for listAuthorizationOpenshiftIoV1RoleBindingForAllNamespaces
     *
     * .
     *
     */
    public function testListAuthorizationOpenshiftIoV1RoleBindingForAllNamespaces()
    {

    }

    /**
     * Test case for listAuthorizationOpenshiftIoV1RoleBindingRestrictionForAllNamespaces
     *
     * .
     *
     */
    public function testListAuthorizationOpenshiftIoV1RoleBindingRestrictionForAllNamespaces()
    {

    }

    /**
     * Test case for listAuthorizationOpenshiftIoV1RoleForAllNamespaces
     *
     * .
     *
     */
    public function testListAuthorizationOpenshiftIoV1RoleForAllNamespaces()
    {

    }

    /**
     * Test case for patchAuthorizationOpenshiftIoV1ClusterPolicy
     *
     * .
     *
     */
    public function testPatchAuthorizationOpenshiftIoV1ClusterPolicy()
    {

    }

    /**
     * Test case for patchAuthorizationOpenshiftIoV1ClusterPolicyBinding
     *
     * .
     *
     */
    public function testPatchAuthorizationOpenshiftIoV1ClusterPolicyBinding()
    {

    }

    /**
     * Test case for patchAuthorizationOpenshiftIoV1ClusterRole
     *
     * .
     *
     */
    public function testPatchAuthorizationOpenshiftIoV1ClusterRole()
    {

    }

    /**
     * Test case for patchAuthorizationOpenshiftIoV1ClusterRoleBinding
     *
     * .
     *
     */
    public function testPatchAuthorizationOpenshiftIoV1ClusterRoleBinding()
    {

    }

    /**
     * Test case for patchAuthorizationOpenshiftIoV1NamespacedPolicy
     *
     * .
     *
     */
    public function testPatchAuthorizationOpenshiftIoV1NamespacedPolicy()
    {

    }

    /**
     * Test case for patchAuthorizationOpenshiftIoV1NamespacedPolicyBinding
     *
     * .
     *
     */
    public function testPatchAuthorizationOpenshiftIoV1NamespacedPolicyBinding()
    {

    }

    /**
     * Test case for patchAuthorizationOpenshiftIoV1NamespacedRole
     *
     * .
     *
     */
    public function testPatchAuthorizationOpenshiftIoV1NamespacedRole()
    {

    }

    /**
     * Test case for patchAuthorizationOpenshiftIoV1NamespacedRoleBinding
     *
     * .
     *
     */
    public function testPatchAuthorizationOpenshiftIoV1NamespacedRoleBinding()
    {

    }

    /**
     * Test case for patchAuthorizationOpenshiftIoV1NamespacedRoleBindingRestriction
     *
     * .
     *
     */
    public function testPatchAuthorizationOpenshiftIoV1NamespacedRoleBindingRestriction()
    {

    }

    /**
     * Test case for readAuthorizationOpenshiftIoV1ClusterPolicy
     *
     * .
     *
     */
    public function testReadAuthorizationOpenshiftIoV1ClusterPolicy()
    {

    }

    /**
     * Test case for readAuthorizationOpenshiftIoV1ClusterPolicyBinding
     *
     * .
     *
     */
    public function testReadAuthorizationOpenshiftIoV1ClusterPolicyBinding()
    {

    }

    /**
     * Test case for readAuthorizationOpenshiftIoV1ClusterRole
     *
     * .
     *
     */
    public function testReadAuthorizationOpenshiftIoV1ClusterRole()
    {

    }

    /**
     * Test case for readAuthorizationOpenshiftIoV1ClusterRoleBinding
     *
     * .
     *
     */
    public function testReadAuthorizationOpenshiftIoV1ClusterRoleBinding()
    {

    }

    /**
     * Test case for readAuthorizationOpenshiftIoV1NamespacedPolicy
     *
     * .
     *
     */
    public function testReadAuthorizationOpenshiftIoV1NamespacedPolicy()
    {

    }

    /**
     * Test case for readAuthorizationOpenshiftIoV1NamespacedPolicyBinding
     *
     * .
     *
     */
    public function testReadAuthorizationOpenshiftIoV1NamespacedPolicyBinding()
    {

    }

    /**
     * Test case for readAuthorizationOpenshiftIoV1NamespacedRole
     *
     * .
     *
     */
    public function testReadAuthorizationOpenshiftIoV1NamespacedRole()
    {

    }

    /**
     * Test case for readAuthorizationOpenshiftIoV1NamespacedRoleBinding
     *
     * .
     *
     */
    public function testReadAuthorizationOpenshiftIoV1NamespacedRoleBinding()
    {

    }

    /**
     * Test case for readAuthorizationOpenshiftIoV1NamespacedRoleBindingRestriction
     *
     * .
     *
     */
    public function testReadAuthorizationOpenshiftIoV1NamespacedRoleBindingRestriction()
    {

    }

    /**
     * Test case for replaceAuthorizationOpenshiftIoV1ClusterPolicy
     *
     * .
     *
     */
    public function testReplaceAuthorizationOpenshiftIoV1ClusterPolicy()
    {

    }

    /**
     * Test case for replaceAuthorizationOpenshiftIoV1ClusterPolicyBinding
     *
     * .
     *
     */
    public function testReplaceAuthorizationOpenshiftIoV1ClusterPolicyBinding()
    {

    }

    /**
     * Test case for replaceAuthorizationOpenshiftIoV1ClusterRole
     *
     * .
     *
     */
    public function testReplaceAuthorizationOpenshiftIoV1ClusterRole()
    {

    }

    /**
     * Test case for replaceAuthorizationOpenshiftIoV1ClusterRoleBinding
     *
     * .
     *
     */
    public function testReplaceAuthorizationOpenshiftIoV1ClusterRoleBinding()
    {

    }

    /**
     * Test case for replaceAuthorizationOpenshiftIoV1NamespacedPolicy
     *
     * .
     *
     */
    public function testReplaceAuthorizationOpenshiftIoV1NamespacedPolicy()
    {

    }

    /**
     * Test case for replaceAuthorizationOpenshiftIoV1NamespacedPolicyBinding
     *
     * .
     *
     */
    public function testReplaceAuthorizationOpenshiftIoV1NamespacedPolicyBinding()
    {

    }

    /**
     * Test case for replaceAuthorizationOpenshiftIoV1NamespacedRole
     *
     * .
     *
     */
    public function testReplaceAuthorizationOpenshiftIoV1NamespacedRole()
    {

    }

    /**
     * Test case for replaceAuthorizationOpenshiftIoV1NamespacedRoleBinding
     *
     * .
     *
     */
    public function testReplaceAuthorizationOpenshiftIoV1NamespacedRoleBinding()
    {

    }

    /**
     * Test case for replaceAuthorizationOpenshiftIoV1NamespacedRoleBindingRestriction
     *
     * .
     *
     */
    public function testReplaceAuthorizationOpenshiftIoV1NamespacedRoleBindingRestriction()
    {

    }

    /**
     * Test case for watchAuthorizationOpenshiftIoV1ClusterPolicy
     *
     * .
     *
     */
    public function testWatchAuthorizationOpenshiftIoV1ClusterPolicy()
    {

    }

    /**
     * Test case for watchAuthorizationOpenshiftIoV1ClusterPolicyBinding
     *
     * .
     *
     */
    public function testWatchAuthorizationOpenshiftIoV1ClusterPolicyBinding()
    {

    }

    /**
     * Test case for watchAuthorizationOpenshiftIoV1ClusterPolicyBindingList
     *
     * .
     *
     */
    public function testWatchAuthorizationOpenshiftIoV1ClusterPolicyBindingList()
    {

    }

    /**
     * Test case for watchAuthorizationOpenshiftIoV1ClusterPolicyList
     *
     * .
     *
     */
    public function testWatchAuthorizationOpenshiftIoV1ClusterPolicyList()
    {

    }

    /**
     * Test case for watchAuthorizationOpenshiftIoV1NamespacedPolicy
     *
     * .
     *
     */
    public function testWatchAuthorizationOpenshiftIoV1NamespacedPolicy()
    {

    }

    /**
     * Test case for watchAuthorizationOpenshiftIoV1NamespacedPolicyBinding
     *
     * .
     *
     */
    public function testWatchAuthorizationOpenshiftIoV1NamespacedPolicyBinding()
    {

    }

    /**
     * Test case for watchAuthorizationOpenshiftIoV1NamespacedPolicyBindingList
     *
     * .
     *
     */
    public function testWatchAuthorizationOpenshiftIoV1NamespacedPolicyBindingList()
    {

    }

    /**
     * Test case for watchAuthorizationOpenshiftIoV1NamespacedPolicyList
     *
     * .
     *
     */
    public function testWatchAuthorizationOpenshiftIoV1NamespacedPolicyList()
    {

    }

    /**
     * Test case for watchAuthorizationOpenshiftIoV1NamespacedRoleBindingRestriction
     *
     * .
     *
     */
    public function testWatchAuthorizationOpenshiftIoV1NamespacedRoleBindingRestriction()
    {

    }

    /**
     * Test case for watchAuthorizationOpenshiftIoV1NamespacedRoleBindingRestrictionList
     *
     * .
     *
     */
    public function testWatchAuthorizationOpenshiftIoV1NamespacedRoleBindingRestrictionList()
    {

    }

    /**
     * Test case for watchAuthorizationOpenshiftIoV1PolicyBindingListForAllNamespaces
     *
     * .
     *
     */
    public function testWatchAuthorizationOpenshiftIoV1PolicyBindingListForAllNamespaces()
    {

    }

    /**
     * Test case for watchAuthorizationOpenshiftIoV1PolicyListForAllNamespaces
     *
     * .
     *
     */
    public function testWatchAuthorizationOpenshiftIoV1PolicyListForAllNamespaces()
    {

    }

    /**
     * Test case for watchAuthorizationOpenshiftIoV1RoleBindingRestrictionListForAllNamespaces
     *
     * .
     *
     */
    public function testWatchAuthorizationOpenshiftIoV1RoleBindingRestrictionListForAllNamespaces()
    {

    }

}
